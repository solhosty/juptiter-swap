import { BN, Program, web3 } from "@project-serum/anchor";
import { PublicKey } from "@solana/web3.js";
import { PsyFiEuros } from "./psyfi_euros";
export declare const deriveUnderlyingPoolKey: (underlyingMint: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const deriveStablePoolKey: (stableMint: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const deriveCallOptionMint: (euroMetaKey: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const deriveCallWriterMint: (euroMetaKey: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const derivePutOptionMint: (euroMetaKey: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const derivePutWriterMint: (euroMetaKey: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const derivePoolAuthority: () => Promise<[web3.PublicKey, number]>;
export declare const deriveVaultAccount: (program: Program<PsyFiEuros>, collateralAssetMint: PublicKey, quoteAssetMint: PublicKey, uniqueSeed: number, strategyType: number) => Promise<[web3.PublicKey, number]>;
export declare const deriveEpochHistory: (program: Program<PsyFiEuros>, vaultAccount: PublicKey, epoch: number) => Promise<[web3.PublicKey, number]>;
export declare const deriveVaultAuthority: (program: Program<PsyFiEuros>, vaultAccount: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const deriveVaultCollateralAccount: (program: Program<PsyFiEuros>, vaultAccount: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const deriveVaultTokenMint: (program: Program<PsyFiEuros>, vaultAccount: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const deriveVaultTokenAccount: (program: Program<PsyFiEuros>, vaultAccount: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const deriveWithdrawalCollateralAccount: (program: Program<PsyFiEuros>, vaultAccount: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const deriveDepositReceipt: (program: Program<PsyFiEuros>, userAuthority: PublicKey, vaultAccount: PublicKey, epoch: number) => Promise<[web3.PublicKey, number]>;
export declare const deriveWithdrawalReceipt: (program: Program<PsyFiEuros>, userAuthority: PublicKey, vaultAccount: PublicKey, epoch: number) => Promise<[web3.PublicKey, number]>;
export declare const deriveOpenOrdersAddress: (serumMarket: PublicKey, authority: PublicKey, serumDexProgramKey: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const deriveMarketAuthority: (serumMarketKey: web3.PublicKey, serumDexProgramKey: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const deriveRequestQueue: (optionMintKey: PublicKey, priceCurrencyKey: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const deriveCoinVault: (optionMintKey: PublicKey, priceCurrencyKey: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const derivePCVault: (optionMintKey: PublicKey, priceCurrencyKey: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const deriveSerumMarketAddress: (optionMintKey: PublicKey, priceCurrencyKey: PublicKey) => Promise<[web3.PublicKey, number]>;
export declare const deriveSerumVaultOwner: (serumMarket: PublicKey, serumDexProgramKey: PublicKey) => Promise<[PublicKey, BN]>;
export declare const deriveStagingAccount: (auctionCurrencyMint: PublicKey, vaultAccount: PublicKey) => Promise<web3.PublicKey>;
export declare const deriveMetadataAccount: (mint: PublicKey) => Promise<web3.PublicKey>;
//# sourceMappingURL=pdas.d.ts.map