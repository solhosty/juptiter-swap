/// <reference types="bn.js" />
import { BN } from "@project-serum/anchor";
import { PublicKey } from "@solana/web3.js";
export declare type VaultAccount = {
    ownerAuthority: PublicKey;
    managerAuthority: PublicKey;
    taskerAuthority: PublicKey;
    vaultCollateralAssetAccount: PublicKey;
    withdrawalCollateralAssetAccount: PublicKey;
    vaultOwnershipTokenAccount: PublicKey;
    feeTokenAccount: PublicKey;
    collateralAssetMint: PublicKey;
    quoteAssetMint: PublicKey;
    vaultOwnershipTokenMint: PublicKey;
    oracle: PublicKey;
    seedVaultTokenPerCollateral: ExchangeRate;
    endingExchangeRateDecimals: number;
    strategyType: number;
    vaultAccountBump: number;
    uniqueSeed: number;
    maxDeposits: BN;
    fees: VaultFees;
    currentEpoch: BN;
    currentEpochHistory: PublicKey;
    pendingCollateralAssetDeposits: BN;
    pendingWithdrawalTokens: BN;
    optionsCollateralHeld: BN;
    optionsActive: boolean;
    auctionCurrencyMint: PublicKey;
    oracleProviderId: number;
    vaultOwnershipTokenSupply: BN;
    vaultCollateralAssetAccountAmount: BN;
    currentOptionSaleAmount: BN;
    reserved1: BN;
    reserved2: BN;
    euroMetaCache: EuroMetaCachedInfo[];
};
export declare type EuroMetaCachedInfo = {
    strikePrice: BN;
    strikePriceDecimals: number;
    writerTokenAmount: BN;
    writerTokenDecimals: number;
    optionTokenAmount: BN;
    optionTokenDecimals: number;
    reserved1: BN;
    reserved2: BN;
};
export declare type ExchangeRate = {
    rate: BN;
    decimals: number;
};
export declare type VaultFees = {
    managementFeeBps: BN;
    performanceFeeBps: BN;
    withdrawalFeeBps: BN;
};
export declare enum StrategyType {
    CALL = 0,
    PUT = 1
}
//# sourceMappingURL=types.d.ts.map