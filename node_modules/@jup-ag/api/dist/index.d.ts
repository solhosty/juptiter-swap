/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
declare const BASE_PATH: string;
/**
 * This is the base class for all generated API classes.
 */
declare class BaseAPI {
    protected configuration: Configuration;
    private middleware;
    constructor(configuration?: Configuration);
    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]): T;
    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>): T;
    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>): T;
    protected request(context: RequestOpts, initOverrides?: RequestInit): Promise<Response>;
    private createFetchParams;
    private fetchApi;
    /**
     * Create a shallow clone of `this` by constructing a new instance
     * and then shallow cloning data members.
     */
    private clone;
}
declare class RequiredError extends Error {
    field: string;
    name: "RequiredError";
    constructor(field: string, msg?: string);
}
declare const COLLECTION_FORMATS: {
    csv: string;
    ssv: string;
    tsv: string;
    pipes: string;
};
declare type FetchAPI = WindowOrWorkerGlobalScope['fetch'];
interface ConfigurationParameters {
    basePath?: string;
    fetchApi?: FetchAPI;
    middleware?: Middleware[];
    queryParamsStringify?: (params: HTTPQuery) => string;
    username?: string;
    password?: string;
    apiKey?: string | ((name: string) => string);
    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string | Promise<string>);
    headers?: HTTPHeaders;
    credentials?: RequestCredentials;
}
declare class Configuration {
    private configuration;
    constructor(configuration?: ConfigurationParameters);
    get basePath(): string;
    get fetchApi(): FetchAPI | undefined;
    get middleware(): Middleware[];
    get queryParamsStringify(): (params: HTTPQuery) => string;
    get username(): string | undefined;
    get password(): string | undefined;
    get apiKey(): ((name: string) => string) | undefined;
    get accessToken(): ((name?: string, scopes?: string[]) => string | Promise<string>) | undefined;
    get headers(): HTTPHeaders | undefined;
    get credentials(): RequestCredentials | undefined;
}
declare type Json = any;
declare type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';
declare type HTTPHeaders = {
    [key: string]: string;
};
declare type HTTPQuery = {
    [key: string]: string | number | null | boolean | Array<string | number | null | boolean> | HTTPQuery;
};
declare type HTTPBody = Json | FormData | URLSearchParams;
declare type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';
interface FetchParams {
    url: string;
    init: RequestInit;
}
interface RequestOpts {
    path: string;
    method: HTTPMethod;
    headers: HTTPHeaders;
    query?: HTTPQuery;
    body?: HTTPBody;
}
declare function exists(json: any, key: string): boolean;
declare function querystring(params: HTTPQuery, prefix?: string): string;
declare function mapValues(data: any, fn: (item: any) => any): {};
declare function canConsumeForm(consumes: Consume[]): boolean;
interface Consume {
    contentType: string;
}
interface RequestContext {
    fetch: FetchAPI;
    url: string;
    init: RequestInit;
}
interface ResponseContext {
    fetch: FetchAPI;
    url: string;
    init: RequestInit;
    response: Response;
}
interface Middleware {
    pre?(context: RequestContext): Promise<FetchParams | void>;
    post?(context: ResponseContext): Promise<Response | void>;
}
interface ApiResponse<T> {
    raw: Response;
    value(): Promise<T>;
}
interface ResponseTransformer<T> {
    (json: any): T;
}
declare class JSONApiResponse<T> {
    raw: Response;
    private transformer;
    constructor(raw: Response, transformer?: ResponseTransformer<T>);
    value(): Promise<T>;
}
declare class VoidApiResponse {
    raw: Response;
    constructor(raw: Response);
    value(): Promise<void>;
}
declare class BlobApiResponse {
    raw: Response;
    constructor(raw: Response);
    value(): Promise<Blob>;
}
declare class TextApiResponse {
    raw: Response;
    constructor(raw: Response);
    value(): Promise<string>;
}

/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface InlineResponse200LpFee
 */
interface InlineResponse200LpFee {
    /**
     *
     * @type {string}
     * @memberof InlineResponse200LpFee
     */
    amount?: string;
    /**
     *
     * @type {string}
     * @memberof InlineResponse200LpFee
     */
    mint?: string;
    /**
     *
     * @type {number}
     * @memberof InlineResponse200LpFee
     */
    pct?: number;
}
declare function InlineResponse200LpFeeFromJSON(json: any): InlineResponse200LpFee;
declare function InlineResponse200LpFeeFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse200LpFee;
declare function InlineResponse200LpFeeToJSON(value?: InlineResponse200LpFee | null): any;

/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface Def0
 */
interface Def0 {
    /**
     *
     * @type {string}
     * @memberof Def0
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof Def0
     */
    label?: string;
    /**
     *
     * @type {string}
     * @memberof Def0
     */
    inputMint?: string;
    /**
     *
     * @type {string}
     * @memberof Def0
     */
    outputMint?: string;
    /**
     *
     * @type {boolean}
     * @memberof Def0
     */
    notEnoughLiquidity?: boolean;
    /**
     *
     * @type {string}
     * @memberof Def0
     */
    inAmount?: string;
    /**
     *
     * @type {string}
     * @memberof Def0
     */
    outAmount?: string;
    /**
     *
     * @type {string}
     * @memberof Def0
     */
    minInAmount?: string;
    /**
     *
     * @type {string}
     * @memberof Def0
     */
    minOutAmount?: string;
    /**
     *
     * @type {number}
     * @memberof Def0
     */
    priceImpactPct?: number;
    /**
     *
     * @type {InlineResponse200LpFee}
     * @memberof Def0
     */
    lpFee?: InlineResponse200LpFee;
    /**
     *
     * @type {InlineResponse200LpFee}
     * @memberof Def0
     */
    platformFee?: InlineResponse200LpFee;
}
declare function Def0FromJSON(json: any): Def0;
declare function Def0FromJSONTyped(json: any, ignoreDiscriminator: boolean): Def0;
declare function Def0ToJSON(value?: Def0 | null): any;

/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Only returned when userPublicKey is given to /quote
 * @export
 * @interface InlineResponse200Fees
 */
interface InlineResponse200Fees {
    /**
     * This inidicate the total amount needed for signing transaction(s). Value in lamports.
     * @type {number}
     * @memberof InlineResponse200Fees
     */
    signatureFee?: number;
    /**
     * This inidicate the total amount needed for deposit of serum order account(s). Value in lamports.
     * @type {Array<number>}
     * @memberof InlineResponse200Fees
     */
    openOrdersDeposits?: Array<number>;
    /**
     * This inidicate the total amount needed for deposit of associative token account(s). Value in lamports.
     * @type {Array<number>}
     * @memberof InlineResponse200Fees
     */
    ataDeposits?: Array<number>;
    /**
     * This inidicate the total lamports needed for fees and deposits above.
     * @type {number}
     * @memberof InlineResponse200Fees
     */
    totalFeeAndDeposits?: number;
    /**
     * This inidicate the minimum lamports needed for transaction(s). Might be used to create wrapped SOL and will be returned when the wrapped SOL is closed.
     * @type {number}
     * @memberof InlineResponse200Fees
     */
    minimumSOLForTransaction?: number;
}
declare function InlineResponse200FeesFromJSON(json: any): InlineResponse200Fees;
declare function InlineResponse200FeesFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse200Fees;
declare function InlineResponse200FeesToJSON(value?: InlineResponse200Fees | null): any;

/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface InlineResponse200MarketInfos
 */
interface InlineResponse200MarketInfos {
    /**
     *
     * @type {string}
     * @memberof InlineResponse200MarketInfos
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof InlineResponse200MarketInfos
     */
    label?: string;
    /**
     *
     * @type {string}
     * @memberof InlineResponse200MarketInfos
     */
    inputMint?: string;
    /**
     *
     * @type {string}
     * @memberof InlineResponse200MarketInfos
     */
    outputMint?: string;
    /**
     *
     * @type {boolean}
     * @memberof InlineResponse200MarketInfos
     */
    notEnoughLiquidity?: boolean;
    /**
     *
     * @type {string}
     * @memberof InlineResponse200MarketInfos
     */
    inAmount?: string;
    /**
     *
     * @type {string}
     * @memberof InlineResponse200MarketInfos
     */
    outAmount?: string;
    /**
     *
     * @type {string}
     * @memberof InlineResponse200MarketInfos
     */
    minInAmount?: string;
    /**
     *
     * @type {string}
     * @memberof InlineResponse200MarketInfos
     */
    minOutAmount?: string;
    /**
     *
     * @type {number}
     * @memberof InlineResponse200MarketInfos
     */
    priceImpactPct?: number;
    /**
     *
     * @type {InlineResponse200LpFee}
     * @memberof InlineResponse200MarketInfos
     */
    lpFee?: InlineResponse200LpFee;
    /**
     *
     * @type {InlineResponse200LpFee}
     * @memberof InlineResponse200MarketInfos
     */
    platformFee?: InlineResponse200LpFee;
}
declare function InlineResponse200MarketInfosFromJSON(json: any): InlineResponse200MarketInfos;
declare function InlineResponse200MarketInfosFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse200MarketInfos;
declare function InlineResponse200MarketInfosToJSON(value?: InlineResponse200MarketInfos | null): any;

/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface Def1
 */
interface Def1 {
    /**
     *
     * @type {string}
     * @memberof Def1
     */
    inAmount: string;
    /**
     *
     * @type {string}
     * @memberof Def1
     */
    outAmount: string;
    /**
     *
     * @type {number}
     * @memberof Def1
     */
    priceImpactPct: number;
    /**
     *
     * @type {Array<InlineResponse200MarketInfos>}
     * @memberof Def1
     */
    marketInfos: Array<InlineResponse200MarketInfos>;
    /**
     *
     * @type {string}
     * @memberof Def1
     */
    amount: string;
    /**
     *
     * @type {number}
     * @memberof Def1
     */
    slippageBps: number;
    /**
     * The threshold for the swap based on the provided slippage: when swapMode is ExactIn the minimum out amount, when swapMode is ExactOut the maximum in amount
     * @type {string}
     * @memberof Def1
     */
    otherAmountThreshold: string;
    /**
     *
     * @type {string}
     * @memberof Def1
     */
    swapMode: Def1SwapModeEnum;
    /**
     *
     * @type {InlineResponse200Fees}
     * @memberof Def1
     */
    fees?: InlineResponse200Fees;
}
/**
* @export
* @enum {string}
*/
declare enum Def1SwapModeEnum {
    ExactIn = "ExactIn",
    ExactOut = "ExactOut"
}
declare function Def1FromJSON(json: any): Def1;
declare function Def1FromJSONTyped(json: any, ignoreDiscriminator: boolean): Def1;
declare function Def1ToJSON(value?: Def1 | null): any;

/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Def2
 */
interface Def2 {
    /**
     * Address of the token
     * @type {string}
     * @memberof Def2
     */
    id?: string;
    /**
     * Symbol of the token
     * @type {string}
     * @memberof Def2
     */
    mintSymbol?: string;
    /**
     * Address of the vs token
     * @type {string}
     * @memberof Def2
     */
    vsToken?: string;
    /**
     * Symbol of the vs token
     * @type {string}
     * @memberof Def2
     */
    vsTokenSymbol?: string;
    /**
     * Default to 1 unit of the token worth in USDC if vsToken is not specified.
     * @type {number}
     * @memberof Def2
     */
    price?: number;
}
declare function Def2FromJSON(json: any): Def2;
declare function Def2FromJSONTyped(json: any, ignoreDiscriminator: boolean): Def2;
declare function Def2ToJSON(value?: Def2 | null): any;

/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface InlineObject
 */
interface InlineObject {
    /**
     *
     * @type {Def1}
     * @memberof InlineObject
     */
    route: Def1;
    /**
     * Public key of the user
     * @type {string}
     * @memberof InlineObject
     */
    userPublicKey: string;
    /**
     * Wrap/unwrap SOL
     * @type {boolean}
     * @memberof InlineObject
     */
    wrapUnwrapSOL?: boolean;
    /**
     * Fee token account for the output token (only pass in if you set a feeBps)
     * @type {string}
     * @memberof InlineObject
     */
    feeAccount?: string;
    /**
     * Request a legacy transaction rather than the default versioned transaction, needs to be paired with a quote using asLegacyTransaction otherwise the transaction might be too large
     * @type {boolean}
     * @memberof InlineObject
     */
    asLegacyTransaction?: boolean;
    /**
     * compute unit price to prioritize the transaction, the additional fee will be compute unit consumed * computeUnitPriceMicroLamports
     * @type {number}
     * @memberof InlineObject
     */
    computeUnitPriceMicroLamports?: number;
    /**
     * Public key of the wallet that will receive the output of the swap, this assumes the associated token account exists, currently adds a token transfer
     * @type {string}
     * @memberof InlineObject
     */
    destinationWallet?: string;
}
declare function InlineObjectFromJSON(json: any): InlineObject;
declare function InlineObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineObject;
declare function InlineObjectToJSON(value?: InlineObject | null): any;

/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface InlineResponse200Data
 */
interface InlineResponse200Data {
    /**
     *
     * @type {string}
     * @memberof InlineResponse200Data
     */
    inAmount: string;
    /**
     *
     * @type {string}
     * @memberof InlineResponse200Data
     */
    outAmount: string;
    /**
     *
     * @type {number}
     * @memberof InlineResponse200Data
     */
    priceImpactPct: number;
    /**
     *
     * @type {Array<InlineResponse200MarketInfos>}
     * @memberof InlineResponse200Data
     */
    marketInfos: Array<InlineResponse200MarketInfos>;
    /**
     *
     * @type {string}
     * @memberof InlineResponse200Data
     */
    amount: string;
    /**
     *
     * @type {number}
     * @memberof InlineResponse200Data
     */
    slippageBps: number;
    /**
     * The threshold for the swap based on the provided slippage: when swapMode is ExactIn the minimum out amount, when swapMode is ExactOut the maximum in amount
     * @type {string}
     * @memberof InlineResponse200Data
     */
    otherAmountThreshold: string;
    /**
     *
     * @type {string}
     * @memberof InlineResponse200Data
     */
    swapMode: InlineResponse200DataSwapModeEnum;
    /**
     *
     * @type {InlineResponse200Fees}
     * @memberof InlineResponse200Data
     */
    fees?: InlineResponse200Fees;
}
/**
* @export
* @enum {string}
*/
declare enum InlineResponse200DataSwapModeEnum {
    ExactIn = "ExactIn",
    ExactOut = "ExactOut"
}
declare function InlineResponse200DataFromJSON(json: any): InlineResponse200Data;
declare function InlineResponse200DataFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse200Data;
declare function InlineResponse200DataToJSON(value?: InlineResponse200Data | null): any;

/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Default response
 * @export
 * @interface InlineResponse200
 */
interface InlineResponse200 {
    /**
     *
     * @type {Array<InlineResponse200Data>}
     * @memberof InlineResponse200
     */
    data?: Array<InlineResponse200Data>;
    /**
     *
     * @type {number}
     * @memberof InlineResponse200
     */
    timeTaken?: number;
    /**
     *
     * @type {number}
     * @memberof InlineResponse200
     */
    contextSlot?: number;
}
declare function InlineResponse200FromJSON(json: any): InlineResponse200;
declare function InlineResponse200FromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse200;
declare function InlineResponse200ToJSON(value?: InlineResponse200 | null): any;

/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Default response
 * @export
 * @interface InlineResponse2001
 */
interface InlineResponse2001 {
    /**
     * Base64 encoded transaction
     * @type {string}
     * @memberof InlineResponse2001
     */
    swapTransaction?: string;
}
declare function InlineResponse2001FromJSON(json: any): InlineResponse2001;
declare function InlineResponse2001FromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse2001;
declare function InlineResponse2001ToJSON(value?: InlineResponse2001 | null): any;

/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Default response with ids which return an object. Refer to Price hash model below. If the id is invalid, it will not return in the hash.
 * @export
 * @interface InlineResponse2002
 */
interface InlineResponse2002 {
    /**
     *
     * @type {{ [key: string]: Def2; }}
     * @memberof InlineResponse2002
     */
    data?: {
        [key: string]: Def2;
    };
    /**
     *
     * @type {number}
     * @memberof InlineResponse2002
     */
    timeTaken?: number;
    /**
     *
     * @type {number}
     * @memberof InlineResponse2002
     */
    contextSlot?: number;
}
declare function InlineResponse2002FromJSON(json: any): InlineResponse2002;
declare function InlineResponse2002FromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse2002;
declare function InlineResponse2002ToJSON(value?: InlineResponse2002 | null): any;

/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Default response
 * @export
 * @interface InlineResponse2003
 */
interface InlineResponse2003 {
    /**
     * All the mints that are indexed to match in indexedRouteMap
     * @type {Array<string>}
     * @memberof InlineResponse2003
     */
    mintKeys?: Array<string>;
    /**
     * All the possible route and their corresponding output mints
     * @type {{ [key: string]: Array<number>; }}
     * @memberof InlineResponse2003
     */
    indexedRouteMap?: {
        [key: string]: Array<number>;
    };
}
declare function InlineResponse2003FromJSON(json: any): InlineResponse2003;
declare function InlineResponse2003FromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse2003;
declare function InlineResponse2003ToJSON(value?: InlineResponse2003 | null): any;

/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface InlineResponse409Data
 */
interface InlineResponse409Data {
    /**
     * Duplicated symbol found for [symbol], use one of the address instead
     * @type {string}
     * @memberof InlineResponse409Data
     */
    error?: string;
    /**
     * List of addresses for the symbol
     * @type {Array<string>}
     * @memberof InlineResponse409Data
     */
    addresses?: Array<string>;
}
declare function InlineResponse409DataFromJSON(json: any): InlineResponse409Data;
declare function InlineResponse409DataFromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse409Data;
declare function InlineResponse409DataToJSON(value?: InlineResponse409Data | null): any;

/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Duplicate symbol found for input or vsToken. The server will respond an error structure which contains the conflict addresses. User will have to use address mode instead.
 * @export
 * @interface InlineResponse409
 */
interface InlineResponse409 {
    /**
     *
     * @type {InlineResponse409Data}
     * @memberof InlineResponse409
     */
    data?: InlineResponse409Data;
}
declare function InlineResponse409FromJSON(json: any): InlineResponse409;
declare function InlineResponse409FromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineResponse409;
declare function InlineResponse409ToJSON(value?: InlineResponse409 | null): any;

/**
 * Jupiter API
 * Jupiter quote and swap API
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

interface V4IndexedRouteMapGetRequest {
    onlyDirectRoutes?: boolean;
}
interface V4PriceGetRequest {
    ids: string;
    vsToken?: string;
    vsAmount?: number;
}
interface V4QuoteGetRequest {
    inputMint: string;
    outputMint: string;
    amount: string;
    swapMode?: V4QuoteGetSwapModeEnum;
    slippageBps?: number;
    feeBps?: number;
    onlyDirectRoutes?: boolean;
    userPublicKey?: string;
    asLegacyTransaction?: boolean;
}
interface V4SwapPostRequest {
    body?: InlineObject;
}
/**
 *
 */
declare class DefaultApi extends BaseAPI {
    /**
     * Returns a hash map, input mint as key and an array of valid output mint as values, token mints are indexed to reduce the file size
     */
    v4IndexedRouteMapGetRaw(requestParameters: V4IndexedRouteMapGetRequest, initOverrides?: RequestInit): Promise<ApiResponse<InlineResponse2003>>;
    /**
     * Returns a hash map, input mint as key and an array of valid output mint as values, token mints are indexed to reduce the file size
     */
    v4IndexedRouteMapGet(requestParameters?: V4IndexedRouteMapGetRequest, initOverrides?: RequestInit): Promise<InlineResponse2003>;
    /**
     * Get simple price for a given input mint, output mint and amount
     * Return simple price
     */
    v4PriceGetRaw(requestParameters: V4PriceGetRequest, initOverrides?: RequestInit): Promise<ApiResponse<InlineResponse2002>>;
    /**
     * Get simple price for a given input mint, output mint and amount
     * Return simple price
     */
    v4PriceGet(requestParameters: V4PriceGetRequest, initOverrides?: RequestInit): Promise<InlineResponse2002>;
    /**
     * Get quote for a given input mint, output mint and amount
     * Return route
     */
    v4QuoteGetRaw(requestParameters: V4QuoteGetRequest, initOverrides?: RequestInit): Promise<ApiResponse<InlineResponse200>>;
    /**
     * Get quote for a given input mint, output mint and amount
     * Return route
     */
    v4QuoteGet(requestParameters: V4QuoteGetRequest, initOverrides?: RequestInit): Promise<InlineResponse200>;
    /**
     * Get swap serialized transactions for a route
     * Return setup, swap and cleanup transactions
     */
    v4SwapPostRaw(requestParameters: V4SwapPostRequest, initOverrides?: RequestInit): Promise<ApiResponse<InlineResponse2001>>;
    /**
     * Get swap serialized transactions for a route
     * Return setup, swap and cleanup transactions
     */
    v4SwapPost(requestParameters?: V4SwapPostRequest, initOverrides?: RequestInit): Promise<InlineResponse2001>;
}
/**
    * @export
    * @enum {string}
    */
declare enum V4QuoteGetSwapModeEnum {
    ExactIn = "ExactIn",
    ExactOut = "ExactOut"
}

export { ApiResponse, BASE_PATH, BaseAPI, BlobApiResponse, COLLECTION_FORMATS, Configuration, ConfigurationParameters, Consume, Def0, Def0FromJSON, Def0FromJSONTyped, Def0ToJSON, Def1, Def1FromJSON, Def1FromJSONTyped, Def1SwapModeEnum, Def1ToJSON, Def2, Def2FromJSON, Def2FromJSONTyped, Def2ToJSON, DefaultApi, FetchAPI, FetchParams, HTTPBody, HTTPHeaders, HTTPMethod, HTTPQuery, InlineObject, InlineObjectFromJSON, InlineObjectFromJSONTyped, InlineObjectToJSON, InlineResponse200, InlineResponse2001, InlineResponse2001FromJSON, InlineResponse2001FromJSONTyped, InlineResponse2001ToJSON, InlineResponse2002, InlineResponse2002FromJSON, InlineResponse2002FromJSONTyped, InlineResponse2002ToJSON, InlineResponse2003, InlineResponse2003FromJSON, InlineResponse2003FromJSONTyped, InlineResponse2003ToJSON, InlineResponse200Data, InlineResponse200DataFromJSON, InlineResponse200DataFromJSONTyped, InlineResponse200DataSwapModeEnum, InlineResponse200DataToJSON, InlineResponse200Fees, InlineResponse200FeesFromJSON, InlineResponse200FeesFromJSONTyped, InlineResponse200FeesToJSON, InlineResponse200FromJSON, InlineResponse200FromJSONTyped, InlineResponse200LpFee, InlineResponse200LpFeeFromJSON, InlineResponse200LpFeeFromJSONTyped, InlineResponse200LpFeeToJSON, InlineResponse200MarketInfos, InlineResponse200MarketInfosFromJSON, InlineResponse200MarketInfosFromJSONTyped, InlineResponse200MarketInfosToJSON, InlineResponse200ToJSON, InlineResponse409, InlineResponse409Data, InlineResponse409DataFromJSON, InlineResponse409DataFromJSONTyped, InlineResponse409DataToJSON, InlineResponse409FromJSON, InlineResponse409FromJSONTyped, InlineResponse409ToJSON, JSONApiResponse, Json, Middleware, ModelPropertyNaming, RequestContext, RequestOpts, RequiredError, ResponseContext, ResponseTransformer, TextApiResponse, V4IndexedRouteMapGetRequest, V4PriceGetRequest, V4QuoteGetRequest, V4QuoteGetSwapModeEnum, V4SwapPostRequest, VoidApiResponse, canConsumeForm, exists, mapValues, querystring };
