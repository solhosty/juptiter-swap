import { Connection, PublicKey, Transaction, VersionedTransaction } from '@solana/web3.js';
import { Owner } from '@jup-ag/common/dist/utils/Owner';
import { ExecuteParams, OnTransaction, SwapResult } from '@jup-ag/common/dist/types';
/** sign, send and await confirmation for an exchange */
export declare const executeTransaction: ({ connection, wallet, onTransaction, inputMint, outputMint, sourceAddress, destinationAddress, swapTransaction, owner, wrapUnwrapSOL, }: {
    connection: Connection;
    wallet: ExecuteParams['wallet'];
    onTransaction?: OnTransaction | undefined;
    inputMint: PublicKey;
    outputMint: PublicKey;
    sourceAddress: PublicKey;
    destinationAddress: PublicKey;
    swapTransaction: Transaction | VersionedTransaction;
    wrapUnwrapSOL?: boolean | undefined;
    owner: Owner;
}) => Promise<SwapResult>;
