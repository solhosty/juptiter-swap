import { seq, struct, u32, u8, offset } from "@solana/buffer-layout";
import { publicKeyLayout, setLayoutDecoder, u128, u64 } from "./base";
const EVENT_ITEM_LAYOUT = struct([
    u8("flag"),
    u8("fee_tier"),
    seq(u8(), 6),
    u128("key"),
    publicKeyLayout("owner"),
    u64("quantity"),
    u64("total"),
]);
const QUEUE_LEN = u32("len");
export const EVENT_QUEUE_LAYOUT = struct([
    u64("flag"),
    QUEUE_LEN,
    seq(u8(), 4),
    seq(EVENT_ITEM_LAYOUT, offset(QUEUE_LEN, -8), "items"),
]);
export class EventQueue {
    constructor(len, items) {
        this.len = len;
        this.items = items;
    }
    allItems() {
        return this.items;
    }
    get length() {
        return this.len;
    }
    static decode(buffer) {
        const { len, items } = EVENT_QUEUE_LAYOUT.decode(buffer);
        return new EventQueue(len, items);
    }
}
setLayoutDecoder(EVENT_QUEUE_LAYOUT, ({ len, items }) => new EventQueue(len, items));
