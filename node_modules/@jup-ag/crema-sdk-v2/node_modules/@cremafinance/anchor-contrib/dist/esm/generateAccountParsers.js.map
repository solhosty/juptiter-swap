{"version":3,"file":"generateAccountParsers.js","sourceRoot":"","sources":["../../src/generateAccountParsers.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAC3D,OAAO,SAAS,MAAM,kBAAkB,CAAC;AASzC;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,sBAAsB,GAAG,CACpC,GAAQ,EACW,EAAE;;IACrB,MAAM,KAAK,GAAG,IAAI,kBAAkB,CAAC,GAAG,CAAC,CAAC;IAC1C,OAAO,+BAA+B,CACpC,MAAA,GAAG,CAAC,QAAQ,0CAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAChC,KAAK,CACN,CAAC;AACJ,CAAC,CAAC;AAEF;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,+BAA+B,GAAG,CAC7C,YAAkC,EAClC,KAAoB,EACD,EAAE;IACrB,OAAO,CAAC,YAAY,aAAZ,YAAY,cAAZ,YAAY,GAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE;QACtD,OAAO,CAAC,SAAS,CAAC,OAAO,CAAY,CAAC,GAAG,CAAC,IAAY,EAAE,EAAE,CACxD,KAAK,CAAC,MAAM,CAAa,OAAO,EAAE,IAAI,CAAC,CAAC;QAC1C,OAAO,OAAO,CAAC;IACjB,CAAC,EAAE,EAAuB,CAAC,CAAC;AAC9B,CAAC,CAAC","sourcesContent":["import type { AccountsCoder, Idl } from \"@project-serum/anchor\";\nimport { BorshAccountsCoder } from \"@project-serum/anchor\";\nimport camelCase from \"lodash.camelcase\";\n\n/**\n * Parsers associated with an IDL.\n */\nexport type AccountParsers<M> = {\n  [K in keyof M]: (data: Buffer) => M[K];\n};\n\n/**\n * Creates parsers for accounts.\n *\n * This is intended to be called once at initialization.\n *\n * @param idl The IDL.\n */\nexport const generateAccountParsers = <M extends Record<string, object>>(\n  idl: Idl\n): AccountParsers<M> => {\n  const coder = new BorshAccountsCoder(idl);\n  return generateAccountParsersFromCoder(\n    idl.accounts?.map((a) => a.name),\n    coder\n  );\n};\n\n/**\n * Creates parsers for accounts.\n *\n * This is intended to be called once at initialization.\n *\n * @param idl The IDL.\n */\nexport const generateAccountParsersFromCoder = <M>(\n  accountNames: string[] | undefined,\n  coder: AccountsCoder\n): AccountParsers<M> => {\n  return (accountNames ?? []).reduce((parsers, account) => {\n    parsers[camelCase(account) as keyof M] = (data: Buffer) =>\n      coder.decode<M[keyof M]>(account, data);\n    return parsers;\n  }, {} as AccountParsers<M>);\n};\n"]}