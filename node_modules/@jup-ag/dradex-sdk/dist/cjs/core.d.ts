import { PublicKey, TransactionInstruction, Transaction, ConfirmOptions, Signer } from "@solana/web3.js";
import { BN, BorshCoder, IdlAccounts, IdlTypes, Provider } from "@project-serum/anchor";
import { Dex } from "@dradex/idl";
export declare const dexCoder: BorshCoder<string, string>;
export interface MarketStateOrderbook {
    bids: PublicKey;
    asks: PublicKey;
}
export interface MarketStateConfig {
    t0LotSize: BN;
    t1LotSize: BN;
    feeRates: {
        maker: BN;
        taker: BN;
    };
}
export declare const FEE_BPS_BASE = 10000;
export declare enum Side {
    BID = 0,
    ASK = 1
}
export interface MarketFormatting {
    lotSize: number;
    tickSize: number;
    quoteSize: number;
    sizeDecimals: number;
    priceDecimals: number;
    quoteDecimals: number;
}
export declare type DexAccounts = IdlAccounts<Dex>;
export declare type MarketState = Omit<Omit<DexAccounts["market"], "orderBook">, "config"> & {
    orderBook: MarketStateOrderbook;
    config: MarketStateConfig;
};
export declare type OrderInput = IdlTypes<Dex>["OrderInput"];
export declare class InstructionSet {
    instructions: TransactionInstruction[];
    private provider?;
    constructor(instructions: TransactionInstruction[], provider?: Provider | undefined);
    tx(): Transaction;
    add(...items: (TransactionInstruction | Transaction | InstructionSet)[]): void;
    instruction(): TransactionInstruction;
    exec({ signers, ...options }?: ConfirmOptions & {
        signers?: Signer[];
    }): Promise<string> | undefined;
}
//# sourceMappingURL=core.d.ts.map