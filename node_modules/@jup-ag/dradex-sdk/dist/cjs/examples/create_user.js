"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const anchor_1 = require("@project-serum/anchor");
const nodewallet_1 = __importDefault(require("@project-serum/anchor/dist/cjs/nodewallet"));
const web3_js_1 = require("@solana/web3.js");
const bs58_1 = __importDefault(require("bs58"));
const __1 = require("..");
// ENTER YOUR SECRET KEY HERE
const SECRET_KEY = "2EEPVAEnxwZe99oXDxTZC7b69aCwDYYxFiVwVXnE7fq9SeDR6zKRKvYLMsYcbmyjtWaV3fXYsMSY5QAdHK5DVLaR";
const KEYPAIR = web3_js_1.Keypair.fromSecretKey(bs58_1.default.decode(SECRET_KEY));
// SOL-USDC
const MARKET_ID = new web3_js_1.PublicKey("CJept8TLyG9r2GMhttqR98zohVq274XCMiy5oxjTKKBt");
async function main() {
    const connection = new web3_js_1.Connection("https://mercurial.rpcpool.com/2a059bc652a2c2635baad96cf70f");
    const provider = new anchor_1.Provider(connection, new nodewallet_1.default(KEYPAIR), {
        commitment: "confirmed",
    });
    const dex = new __1.DexProgram({ provider });
    const publicKey = new web3_js_1.PublicKey("BUX7s2ef2htTGb2KKoPHWkmzxPj4nTWMWRgs5CSbQxf9");
    // fetch market
    const market = await dex.getMarket(MARKET_ID);
    await dex.loadMarket(market);
    // ensure that the MarketUser & DexUser exists
    const dexUserAddress = await dex.getDexUserAddress(publicKey);
    const marketUserAddress = await dex.getMarketUserAddress(market.address, publicKey);
    const [dexUser, marketUser] = await connection.getMultipleAccountsInfo([dexUserAddress, marketUserAddress]);
    const ix = dex.createInstructionSet([]);
    if (!dexUser) {
        ix.add(await dex.createDexUser(publicKey));
    }
    if (!marketUser) {
        ix.add(await dex.createMarketUser(market, publicKey));
    }
    const txId = await ix.exec({ skipPreflight: true });
    console.log("txId:", txId);
}
main();
