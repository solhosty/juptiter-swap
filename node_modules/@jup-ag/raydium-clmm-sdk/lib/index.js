"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var le=Object.defineProperty,ce=Object.defineProperties;var de=Object.getOwnPropertyDescriptors;var W=Object.getOwnPropertySymbols;var pe=Object.prototype.hasOwnProperty,ye=Object.prototype.propertyIsEnumerable;var j=(y,e,t)=>e in y?le(y,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):y[e]=t,J=(y,e)=>{for(var t in e||(e={}))pe.call(e,t)&&j(y,t,e[t]);if(W)for(var t of W(e))ye.call(e,t)&&j(y,t,e[t]);return y},$=(y,e)=>ce(y,de(e));var _bnjs = require('bn.js'); var _bnjs2 = _interopRequireDefault(_bnjs);var _decimaljs = require('decimal.js'); var _decimaljs2 = _interopRequireDefault(_decimaljs);var _web3js = require('@solana/web3.js');var b=new (0, _bnjs2.default)(0),T=new (0, _bnjs2.default)(1),N=new (0, _bnjs2.default)(-1),_=new (0, _bnjs2.default)(1).shln(64),L=new (0, _bnjs2.default)(1).shln(128),Q=_.sub(T),O=64,ee=L.subn(1),F=-307200,C=-F,v=new (0, _bnjs2.default)("3939943522091"),R=new (0, _bnjs2.default)("86367321006760116002434269"),te=-307200,ne=306600,ie=14,ae="59543866431248",re="184467440737095516",ue="15793534762490258745",V=new (0, _bnjs2.default)(10).pow(new (0, _bnjs2.default)(6));var Ie=new (0, _web3js.PublicKey)("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA");function ke(y){let e=new ArrayBuffer(4);return new DataView(e).setInt32(0,y,!1),new Uint8Array(e)}var Se=Buffer.from("tick_array","utf8");function Ae(y,e){let[t,n]=_web3js.PublicKey.findProgramAddressSync(y,e);return{publicKey:t,nonce:n}}function h(y,e,t){let{publicKey:n,nonce:a}=Ae([Se,e.toBuffer(),ke(t)],y);return{publicKey:n,nonce:a}}var M=60,we= exports.TICK_ARRAY_BITMAP_SIZE =1024,k= exports.TickUtils =class{static getTickArrayStartIndexByTick(e,t){let n=e/(M*t);return e<0&&e%(M*t)!=0?n=Math.ceil(n)-1:n=Math.floor(n),n*(t*M)}static getTickArrayOffsetInBitmapByTick(e,t){let n=t*M,a=Math.floor(e/n)+512;return Math.abs(a)}static checkTickArrayIsInitialized(e,t,n){let a=n*M,u=Math.floor(t/a)+512,i=Math.abs(u);return{isInitialized:e.testn(i),startIndex:(i-512)*a}}static getNextTickArrayStartIndex(e,t,n){return n?e-t*M:e+t*M}static mergeTickArrayBitmap(e){return e[0].add(e[1].shln(64)).add(e[2].shln(128)).add(e[3].shln(192)).add(e[4].shln(256)).add(e[5].shln(320)).add(e[6].shln(384)).add(e[7].shln(448)).add(e[8].shln(512)).add(e[9].shln(576)).add(e[10].shln(640)).add(e[11].shln(704)).add(e[12].shln(768)).add(e[13].shln(832)).add(e[14].shln(896)).add(e[15].shln(960))}static getInitializedTickArrayInRange(e,t,n,a){if(n%(t*M)!=0)throw new Error("Invild tickArrayStartIndex");let u=Math.floor(n/(t*M))+512;return[...k.searchLowBitFromStart(e,u-1,0,a,t),...k.searchHightBitFromStart(e,u,we,a,t)]}static searchLowBitFromStart(e,t,n,a,u){let i=0,r=[];for(let s=t;s>=n;s--){if(e.shrn(s).and(new (0, _bnjs2.default)(1)).eqn(1)){let m=(s-512)*(u*M);r.push(m),i++}if(i>=a)break}return r}static searchHightBitFromStart(e,t,n,a,u){let i=0,r=[];for(let s=t;s<n;s++){if(e.shrn(s).and(new (0, _bnjs2.default)(1)).eqn(1)){let m=(s-512)*(u*M);r.push(m),i++}if(i>=a)break}return r}};var oe=15,D=class{static nextInitializedTick(e,t,n,a,u,i){let{initializedTick:r,tickArrayAddress:s,tickArrayStartTickIndex:m}=this.nextInitializedTickInOneArray(e,t,n,a,u,i);for(;r==null||r.liquidityGross.lten(0);){if(m=k.getNextTickArrayStartIndex(m,u,i),m<te||m>ne)throw new Error("No enough initialized tickArray");let p=n[m];if(p===void 0)continue;let{nextTick:g,tickArrayAddress:c,tickArrayStartTickIndex:A}=this.firstInitializedTickInOneArray(e,t,p,i);[r,s,m]=[g,c,A]}if(r==null)throw new Error("No invaild tickArray cache");return{nextTick:r,tickArrayAddress:s,tickArrayStartTickIndex:m}}static firstInitializedTickInOneArray(e,t,n,a){let u;if(a){let r=M-1;for(;r>=0;){let s=n.ticks[r];if(s.liquidityGross.gtn(0)){u=s;break}r=r-1}}else{let r=0;for(;r<M;){let s=n.ticks[r];if(s.liquidityGross.gtn(0)){u=s;break}r=r+1}}let{publicKey:i}=h(e,t,n.startTickIndex);return{nextTick:u,tickArrayAddress:i,tickArrayStartTickIndex:n.startTickIndex}}static nextInitializedTickInOneArray(e,t,n,a,u,i){let r=k.getTickArrayStartIndexByTick(a,u),s=Math.floor((a-r)/u),m=n[r];if(m==null)return{initializedTick:void 0,tickArrayAddress:void 0,tickArrayStartTickIndex:r};let p;if(i)for(;s>=0;){let c=m.ticks[s];if(c.liquidityGross.gtn(0)){p=c;break}s=s-1}else for(s=s+1;s<M;){let c=m.ticks[s];if(c.liquidityGross.gtn(0)){p=c;break}s=s+1}let{publicKey:g}=h(e,t,r);return{initializedTick:p,tickArrayAddress:g,tickArrayStartTickIndex:m.startTickIndex}}};var w=class{static mulDivRoundingUp(e,t,n){let a=e.mul(t),u=a.div(n);return a.mod(n).eq(b)||(u=u.add(T)),u}static mulDivFloor(e,t,n){if(n.eq(b))throw new Error("division by 0");return e.mul(t).div(n)}static mulDivCeil(e,t,n){if(n.eq(b))throw new Error("division by 0");return e.mul(t).add(n.sub(T)).div(n)}static x64ToDecimal(e,t){return new (0, _decimaljs2.default)(e.toString()).div(_decimaljs2.default.pow(2,64)).toDecimalPlaces(t)}static decimalToX64(e){return new (0, _bnjs2.default)(e.mul(_decimaljs2.default.pow(2,64)).floor().toFixed())}static wrappingSubU128(e,t){return e.add(L).sub(t).mod(L)}};function S(y,e){return Y(y.mul(e),64,256)}function be(y,e,t){let n=y.toTwos(t).shln(e);return n.imaskn(t+1),n.fromTwos(t)}function Y(y,e,t){let n=y.toTwos(t).shrn(e);return n.imaskn(t-e+1),n.fromTwos(t-e)}var x=class{static sqrtPriceX64ToPrice(e,t,n){return w.x64ToDecimal(e).pow(2).mul(_decimaljs2.default.pow(10,t-n))}static priceToSqrtPriceX64(e,t,n){return w.decimalToX64(e.mul(_decimaljs2.default.pow(10,n-t)).sqrt())}static getNextSqrtPriceX64FromInput(e,t,n,a){if(!e.gt(b))throw new Error("sqrtPriceX64 must greater than 0");if(!t.gt(b))throw new Error("liquidity must greater than 0");return a?this.getNextSqrtPriceFromTokenAmountARoundingUp(e,t,n,!0):this.getNextSqrtPriceFromTokenAmountBRoundingDown(e,t,n,!0)}static getNextSqrtPriceX64FromOutput(e,t,n,a){if(!e.gt(b))throw new Error("sqrtPriceX64 must greater than 0");if(!t.gt(b))throw new Error("liquidity must greater than 0");return a?this.getNextSqrtPriceFromTokenAmountBRoundingDown(e,t,n,!1):this.getNextSqrtPriceFromTokenAmountARoundingUp(e,t,n,!1)}static getNextSqrtPriceFromTokenAmountARoundingUp(e,t,n,a){if(n.eq(b))return e;let u=t.shln(O);if(a){let i=u,r=u.add(n.mul(e));return r.gte(i)?w.mulDivCeil(i,e,r):w.mulDivRoundingUp(i,T,i.div(e).add(n))}else{let i=n.mul(e);if(!u.gt(i))throw new Error("getNextSqrtPriceFromTokenAmountARoundingUp,liquidityLeftShift must gt amountMulSqrtPrice");let r=u.sub(i);return w.mulDivCeil(u,e,r)}}static getNextSqrtPriceFromTokenAmountBRoundingDown(e,t,n,a){let u=n.shln(O);if(a)return e.add(u.div(t));{let i=w.mulDivRoundingUp(u,T,t);if(!e.gt(i))throw new Error("getNextSqrtPriceFromTokenAmountBRoundingDown sqrtPriceX64 must gt amountDivLiquidity");return e.sub(i)}}static getSqrtPriceX64FromTick(e){if(!Number.isInteger(e))throw new Error("tick must be integer");if(e<F||e>C)throw new Error("tick must be in MIN_TICK and MAX_TICK");let t=e<0?e*-1:e,n=(t&1)!=0?new (0, _bnjs2.default)("18445821805675395072"):new (0, _bnjs2.default)("18446744073709551616");return(t&2)!=0&&(n=S(n,new (0, _bnjs2.default)("18444899583751176192"))),(t&4)!=0&&(n=S(n,new (0, _bnjs2.default)("18443055278223355904"))),(t&8)!=0&&(n=S(n,new (0, _bnjs2.default)("18439367220385607680"))),(t&16)!=0&&(n=S(n,new (0, _bnjs2.default)("18431993317065453568"))),(t&32)!=0&&(n=S(n,new (0, _bnjs2.default)("18417254355718170624"))),(t&64)!=0&&(n=S(n,new (0, _bnjs2.default)("18387811781193609216"))),(t&128)!=0&&(n=S(n,new (0, _bnjs2.default)("18329067761203558400"))),(t&256)!=0&&(n=S(n,new (0, _bnjs2.default)("18212142134806163456"))),(t&512)!=0&&(n=S(n,new (0, _bnjs2.default)("17980523815641700352"))),(t&1024)!=0&&(n=S(n,new (0, _bnjs2.default)("17526086738831433728"))),(t&2048)!=0&&(n=S(n,new (0, _bnjs2.default)("16651378430235570176"))),(t&4096)!=0&&(n=S(n,new (0, _bnjs2.default)("15030750278694412288"))),(t&8192)!=0&&(n=S(n,new (0, _bnjs2.default)("12247334978884435968"))),(t&16384)!=0&&(n=S(n,new (0, _bnjs2.default)("8131365268886854656"))),(t&32768)!=0&&(n=S(n,new (0, _bnjs2.default)("3584323654725218816"))),(t&65536)!=0&&(n=S(n,new (0, _bnjs2.default)("696457651848324352"))),(t&131072)!=0&&(n=S(n,new (0, _bnjs2.default)("26294789957507116"))),(t&262144)!=0&&(n=S(n,new (0, _bnjs2.default)("37481735321082"))),e>0&&(n=ee.div(n)),n}static getTickFromPrice(e,t,n){return x.getTickFromSqrtPriceX64(x.priceToSqrtPriceX64(e,t,n))}static getTickFromSqrtPriceX64(e){if(e.gt(R)||e.lt(v))throw new Error("Provided sqrtPrice is not within the supported sqrtPrice range.");let t=e.bitLength()-1,n=new (0, _bnjs2.default)(t-64),a=be(n,32,128),u=new (0, _bnjs2.default)("8000000000000000","hex"),i=0,r=new (0, _bnjs2.default)(0),s=t>=64?e.shrn(t-63):e.shln(63-t);for(;u.gt(new (0, _bnjs2.default)(0))&&i<ie;){s=s.mul(s);let o=s.shrn(127);s=s.shrn(63+o.toNumber()),r=r.add(u.mul(o)),u=u.shrn(1),i+=1}let m=r.shrn(32),g=a.add(m).mul(new (0, _bnjs2.default)(ae)),c=Y(g.sub(new (0, _bnjs2.default)(re)),64,128).toNumber(),A=Y(g.add(new (0, _bnjs2.default)(ue)),64,128).toNumber();return c==A?c:x.getSqrtPriceX64FromTick(A).lte(e)?A:c}};var f=class{static addDelta(e,t){return e.add(t)}static getTokenAmountAFromLiquidity(e,t,n,a){if(e.gt(t)&&([e,t]=[t,e]),!e.gt(b))throw new Error("sqrtPriceX64A must greater than 0");let u=n.ushln(O),i=t.sub(e);return a?w.mulDivRoundingUp(w.mulDivCeil(u,i,t),T,e):w.mulDivFloor(u,i,t).div(e)}static getTokenAmountBFromLiquidity(e,t,n,a){if(e.gt(t)&&([e,t]=[t,e]),!e.gt(b))throw new Error("sqrtPriceX64A must greater than 0");return a?w.mulDivCeil(n,t.sub(e),_):w.mulDivFloor(n,t.sub(e),_)}static getLiquidityFromTokenAmountA(e,t,n,a){e.gt(t)&&([e,t]=[t,e]);let u=n.mul(e).mul(t),i=t.sub(e),r=u.div(i);return a?w.mulDivRoundingUp(r,T,Q):r.shrn(O)}static getLiquidityFromTokenAmountB(e,t,n){return e.gt(t)&&([e,t]=[t,e]),w.mulDivFloor(n,Q,t.sub(e))}static getLiquidityFromTokenAmounts(e,t,n,a,u){if(t.gt(n)&&([t,n]=[n,t]),e.lte(t))return f.getLiquidityFromTokenAmountA(t,n,a,!1);if(e.lt(n)){let i=f.getLiquidityFromTokenAmountA(e,n,a,!1),r=f.getLiquidityFromTokenAmountB(t,e,u);return i.lt(r)?i:r}else return f.getLiquidityFromTokenAmountB(t,n,u)}static getAmountsFromLiquidity(e,t,n,a,u){if(t.gt(n)&&([t,n]=[n,t]),e.lte(t))return{amountA:f.getTokenAmountAFromLiquidity(t,n,a,u),amountB:new (0, _bnjs2.default)(0)};if(e.lt(n)){let i=f.getTokenAmountAFromLiquidity(e,n,a,u),r=f.getTokenAmountBFromLiquidity(t,e,a,u);return{amountA:i,amountB:r}}else return{amountA:new (0, _bnjs2.default)(0),amountB:f.getTokenAmountBFromLiquidity(t,n,a,u)}}static getAmountsFromLiquidityWithSlippage(e,t,n,a,u,i,r){let{amountA:s,amountB:m}=f.getAmountsFromLiquidity(e,t,n,a,i),p=u?1+r:1-r,g=s.muln(p),c=m.muln(p);return{amountSlippageA:g,amountSlippageB:c}}},K=class{static swapCompute(e,t,n,a,u,i,r,s,m,p,g,c){if(p.eq(b))throw new Error("amountSpecified must not be 0");if(c||(c=a?v.add(T):R.sub(T)),a){if(c.lt(v))throw new Error("sqrtPriceX64 must greater than MIN_SQRT_PRICE_X64");if(c.gte(m))throw new Error("sqrtPriceX64 must smaller than current")}else{if(c.gt(R))throw new Error("sqrtPriceX64 must smaller than MAX_SQRT_PRICE_X64");if(c.lte(m))throw new Error("sqrtPriceX64 must greater than current")}let A=p.gt(b),o={amountSpecifiedRemaining:p,amountCalculated:b,sqrtPriceX64:m,tick:r,accounts:[],liquidity:i,feeAmount:new (0, _bnjs2.default)(0)},P=0;for(;!o.amountSpecifiedRemaining.eq(b)&&o.sqrtPriceX64!=c&&o.tick<C&&o.tick>F;){if(P>10)throw Error("liquidity limit");let d={};d.sqrtPriceStartX64=o.sqrtPriceX64;let{nextTick:U,tickArrayAddress:Z,tickArrayStartTickIndex:H}=D.nextInitializedTick(e,t,n,o.tick,s,a);d.tickNext=U.tick,d.initialized=U.liquidityGross.gtn(0),g!==H&&Z&&(o.accounts.push(Z),g=H),d.tickNext<F?d.tickNext=F:d.tickNext>C&&(d.tickNext=C),d.sqrtPriceNextX64=x.getSqrtPriceX64FromTick(d.tickNext);let X;if(a&&d.sqrtPriceNextX64.lt(c)||!a&&d.sqrtPriceNextX64.gt(c)?X=c:X=d.sqrtPriceNextX64,[o.sqrtPriceX64,d.amountIn,d.amountOut,d.feeAmount]=K.swapStepCompute(o.sqrtPriceX64,X,o.liquidity,o.amountSpecifiedRemaining,u),o.feeAmount=o.feeAmount.add(d.feeAmount),A?(o.amountSpecifiedRemaining=o.amountSpecifiedRemaining.sub(d.amountIn.add(d.feeAmount)),o.amountCalculated=o.amountCalculated.sub(d.amountOut)):(o.amountSpecifiedRemaining=o.amountSpecifiedRemaining.add(d.amountOut),o.amountCalculated=o.amountCalculated.add(d.amountIn.add(d.feeAmount))),o.sqrtPriceX64.eq(d.sqrtPriceNextX64)){if(d.initialized){let z=U.liquidityNet;a&&(z=z.mul(N)),o.liquidity=f.addDelta(o.liquidity,z)}o.tick=a?d.tickNext-1:d.tickNext}else o.sqrtPriceX64!=d.sqrtPriceStartX64&&(o.tick=x.getTickFromSqrtPriceX64(o.sqrtPriceX64));++P}return{amountCalculated:o.amountCalculated,feeAmount:o.feeAmount,sqrtPriceX64:o.sqrtPriceX64,liquidity:o.liquidity,tickCurrent:o.tick,accounts:o.accounts}}static swapStepCompute(e,t,n,a,u){let i={sqrtPriceX64Next:new (0, _bnjs2.default)(0),amountIn:new (0, _bnjs2.default)(0),amountOut:new (0, _bnjs2.default)(0),feeAmount:new (0, _bnjs2.default)(0)},r=e.gte(t),s=a.gte(b);if(s){let p=w.mulDivFloor(a,V.sub(new (0, _bnjs2.default)(u.toString())),V);i.amountIn=r?f.getTokenAmountAFromLiquidity(t,e,n,!0):f.getTokenAmountBFromLiquidity(e,t,n,!0),p.gte(i.amountIn)?i.sqrtPriceX64Next=t:i.sqrtPriceX64Next=x.getNextSqrtPriceX64FromInput(e,n,p,r)}else i.amountOut=r?f.getTokenAmountBFromLiquidity(t,e,n,!1):f.getTokenAmountAFromLiquidity(e,t,n,!1),a.mul(N).gte(i.amountOut)?i.sqrtPriceX64Next=t:i.sqrtPriceX64Next=x.getNextSqrtPriceX64FromOutput(e,n,a.mul(N),r);let m=t.eq(i.sqrtPriceX64Next);return r?(m&&s||(i.amountIn=f.getTokenAmountAFromLiquidity(i.sqrtPriceX64Next,e,n,!0)),m&&!s||(i.amountOut=f.getTokenAmountBFromLiquidity(i.sqrtPriceX64Next,e,n,!1))):(i.amountIn=m&&s?i.amountIn:f.getTokenAmountBFromLiquidity(e,i.sqrtPriceX64Next,n,!0),i.amountOut=m&&!s?i.amountOut:f.getTokenAmountAFromLiquidity(e,i.sqrtPriceX64Next,n,!1)),!s&&i.amountOut.gt(a.mul(N))&&(i.amountOut=a.mul(N)),s&&!i.sqrtPriceX64Next.eq(t)?i.feeAmount=a.sub(i.amountIn):i.feeAmount=w.mulDivCeil(i.amountIn,new (0, _bnjs2.default)(u),V.sub(new (0, _bnjs2.default)(u))),[i.sqrtPriceX64Next,i.amountIn,i.amountOut,i.feeAmount]}};var q=class{static getOutputAmountAndRemainAccounts(e,t,n,a,u){let i=n.equals(e.mintA.mint),r=[],{isExist:s,startIndex:m,nextAccountMeta:p}=this.getFirstInitializedTickArray(e,i);if(!s||m===void 0||!p)throw new Error("Invalid tick array");r.push(p);let{amountCalculated:g,accounts:c,sqrtPriceX64:A,feeAmount:o}=K.swapCompute(e.programId,e.id,t,i,e.ammConfig.tradeFeeRate,e.liquidity,e.tickCurrent,e.tickSpacing,e.sqrtPriceX64,a,m,u);return r.push(...c),{expectedAmountOut:g.mul(N),remainingAccounts:r,executionPrice:A,feeAmount:o}}static getInputAmountAndRemainAccounts(e,t,n,a,u){let i=n.equals(e.mintB.mint),r=[],{isExist:s,startIndex:m,nextAccountMeta:p}=this.getFirstInitializedTickArray(e,i);if(!s||m===void 0||!p)throw new Error("Invalid tick array");r.push(p);let{amountCalculated:g,accounts:c,sqrtPriceX64:A,feeAmount:o}=K.swapCompute(e.programId,e.id,t,i,e.ammConfig.tradeFeeRate,e.liquidity,e.tickCurrent,e.tickSpacing,e.sqrtPriceX64,a.mul(N),m,u);return r.push(...c),{expectedAmountIn:g,remainingAccounts:r,executionPrice:A,feeAmount:o}}static getFirstInitializedTickArray(e,t){let n=k.mergeTickArrayBitmap(e.tickArrayBitmap),{isInitialized:a,startIndex:u}=k.checkTickArrayIsInitialized(n,e.tickCurrent,e.tickSpacing);if(a){let{publicKey:s}=h(e.programId,e.id,u);return{isExist:!0,startIndex:u,nextAccountMeta:s}}let{isExist:i,nextStartIndex:r}=this.nextInitializedTickArrayStartIndex(e,t);if(i){let{publicKey:s}=h(e.programId,e.id,r);return{isExist:!0,startIndex:r,nextAccountMeta:s}}return{isExist:!1,nextAccountMeta:void 0,startIndex:void 0}}static nextInitializedTickArrayStartIndex(e,t){let n=k.mergeTickArrayBitmap(e.tickArrayBitmap),a=k.getTickArrayOffsetInBitmapByTick(e.tickCurrent,e.tickSpacing),u=t?k.searchLowBitFromStart(n,a-1,0,1,e.tickSpacing):k.searchHightBitFromStart(n,a,1024,1,e.tickSpacing);return u.length>0?{isExist:!0,nextStartIndex:u[0]}:{isExist:!1,nextStartIndex:0}}};var me=class{static computeAmountOut({poolInfo:e,tickArrayCache:t,baseMint:n,amountIn:a,slippage:u,priceLimit:i=new (0, _decimaljs2.default)(0)}){let r;i.equals(new (0, _decimaljs2.default)(0))?r=n.equals(e.mintA.mint)?v.add(T):R.sub(T):r=x.priceToSqrtPriceX64(i,e.mintA.decimals,e.mintB.decimals);let{expectedAmountOut:s,remainingAccounts:m,executionPrice:p,feeAmount:g}=q.getOutputAmountAndRemainAccounts(e,t,n,a,r),c=x.sqrtPriceX64ToPrice(p,e.mintA.decimals,e.mintB.decimals),A=n.equals(e.mintA.mint)?c:new (0, _decimaljs2.default)(1).div(c),o=s.mul(new (0, _bnjs2.default)(Math.floor((1-u)*1e10))).div(new (0, _bnjs2.default)(1e10)),P=e.mintA.mint.equals(n)?e.currentPrice:new (0, _decimaljs2.default)(1).div(e.currentPrice),d=Math.abs(parseFloat(A.toFixed())-parseFloat(P.toFixed()))/parseFloat(P.toFixed());return{amountOut:s,minAmountOut:o,currentPrice:e.currentPrice,executionPrice:A,priceImpact:d,fee:g,remainingAccounts:m}}static computeAmountIn({poolInfo:e,tickArrayCache:t,baseMint:n,amountOut:a,slippage:u,priceLimit:i=new (0, _decimaljs2.default)(0)}){let r;i.equals(new (0, _decimaljs2.default)(0))?r=n.equals(e.mintB.mint)?v.add(T):R.sub(T):r=x.priceToSqrtPriceX64(i,e.mintA.decimals,e.mintB.decimals);let{expectedAmountIn:s,remainingAccounts:m,executionPrice:p,feeAmount:g}=q.getInputAmountAndRemainAccounts(e,t,n,a,r),c=x.sqrtPriceX64ToPrice(p,e.mintA.decimals,e.mintB.decimals),A=n.equals(e.mintA.mint)?c:new (0, _decimaljs2.default)(1).div(c),o=s.mul(new (0, _bnjs2.default)(Math.floor((1+u)*1e10))).div(new (0, _bnjs2.default)(1e10)),P=e.mintA.mint.equals(n)?e.currentPrice:new (0, _decimaljs2.default)(1).div(e.currentPrice),d=Math.abs(parseFloat(A.toFixed())-parseFloat(P.toFixed()))/parseFloat(P.toFixed());return{amountIn:s,maxAmountIn:o,currentPrice:e.currentPrice,executionPrice:A,priceImpact:d,fee:g,remainingAccounts:m}}static getTickArrayPks(e,t,n){let a=k.mergeTickArrayBitmap(t.tickArrayBitmap),u=k.getTickArrayStartIndexByTick(t.tickCurrent,t.tickSpacing),i=[],r=k.getInitializedTickArrayInRange(a,t.tickSpacing,u,Math.floor(oe/2));for(let s of r){let{publicKey:m}=h(n,e,s);i.push(m)}return i}static formatPoolInfo({address:e,poolState:t,ammConfig:n,programId:a}){return{id:e,mintA:{mint:t.tokenMint0,vault:t.tokenVault0,decimals:t.mintDecimals0},mintB:{mint:t.tokenMint1,vault:t.tokenVault1,decimals:t.mintDecimals1},observationId:t.observationKey,ammConfig:$(J({},n),{id:t.ammConfig}),programId:a,tickSpacing:t.tickSpacing,liquidity:t.liquidity,sqrtPriceX64:t.sqrtPriceX64,currentPrice:x.sqrtPriceX64ToPrice(t.sqrtPriceX64,t.mintDecimals0,t.mintDecimals1),tickCurrent:t.tickCurrent,observationIndex:t.observationIndex,observationUpdateDuration:t.observationUpdateDuration,tickArrayBitmap:t.tickArrayBitmap}}};var rt={version:"0.1.0",name:"amm_v3",instructions:[{name:"createAmmConfig",accounts:[{name:"owner",isMut:!0,isSigner:!0},{name:"ammConfig",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"index",type:"u16"},{name:"tickSpacing",type:"u16"},{name:"tradeFeeRate",type:"u32"},{name:"protocolFeeRate",type:"u32"},{name:"fundFeeRate",type:"u32"}]},{name:"updateAmmConfig",accounts:[{name:"owner",isMut:!1,isSigner:!0},{name:"ammConfig",isMut:!0,isSigner:!1}],args:[{name:"param",type:"u8"},{name:"value",type:"u32"}]},{name:"createPool",accounts:[{name:"poolCreator",isMut:!0,isSigner:!0},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"tokenMint0",isMut:!1,isSigner:!1},{name:"tokenMint1",isMut:!1,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"observationState",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[{name:"sqrtPriceX64",type:"u128"}]},{name:"resetSqrtPrice",accounts:[{name:"owner",isMut:!1,isSigner:!0},{name:"poolState",isMut:!0,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"observationState",isMut:!0,isSigner:!1},{name:"recipientTokenAccount0",isMut:!0,isSigner:!1},{name:"recipientTokenAccount1",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"sqrtPriceX64",type:"u128"}]},{name:"initializeReward",accounts:[{name:"rewardFunder",isMut:!0,isSigner:!0},{name:"funderTokenAccount",isMut:!0,isSigner:!1},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"rewardTokenMint",isMut:!1,isSigner:!1},{name:"rewardTokenVault",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[{name:"param",type:{defined:"InitializeRewardParam"}}]},{name:"collectRemainingRewards",accounts:[{name:"rewardFunder",isMut:!0,isSigner:!0},{name:"funderTokenAccount",isMut:!0,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"rewardTokenVault",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"rewardIndex",type:"u8"}]},{name:"updateRewardInfos",accounts:[{name:"poolState",isMut:!0,isSigner:!1}],args:[]},{name:"setRewardParams",accounts:[{name:"authority",isMut:!0,isSigner:!0},{name:"ammConfig",isMut:!0,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1}],args:[{name:"rewardIndex",type:"u8"},{name:"emissionsPerSecondX64",type:"u128"},{name:"openTime",type:"u64"},{name:"endTime",type:"u64"}]},{name:"collectProtocolFee",accounts:[{name:"owner",isMut:!1,isSigner:!0},{name:"poolState",isMut:!0,isSigner:!1},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"recipientTokenAccount0",isMut:!0,isSigner:!1},{name:"recipientTokenAccount1",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"amount0Requested",type:"u64"},{name:"amount1Requested",type:"u64"}]},{name:"collectFundFee",accounts:[{name:"owner",isMut:!1,isSigner:!0},{name:"poolState",isMut:!0,isSigner:!1},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"recipientTokenAccount0",isMut:!0,isSigner:!1},{name:"recipientTokenAccount1",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"amount0Requested",type:"u64"},{name:"amount1Requested",type:"u64"}]},{name:"openPosition",accounts:[{name:"payer",isMut:!0,isSigner:!0},{name:"positionNftOwner",isMut:!1,isSigner:!1},{name:"positionNftMint",isMut:!0,isSigner:!0},{name:"positionNftAccount",isMut:!0,isSigner:!1},{name:"metadataAccount",isMut:!0,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"protocolPosition",isMut:!0,isSigner:!1},{name:"tickArrayLower",isMut:!0,isSigner:!1},{name:"tickArrayUpper",isMut:!0,isSigner:!1},{name:"personalPosition",isMut:!0,isSigner:!1},{name:"tokenAccount0",isMut:!0,isSigner:!1},{name:"tokenAccount1",isMut:!0,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"metadataProgram",isMut:!1,isSigner:!1}],args:[{name:"tickLowerIndex",type:"i32"},{name:"tickUpperIndex",type:"i32"},{name:"tickArrayLowerStartIndex",type:"i32"},{name:"tickArrayUpperStartIndex",type:"i32"},{name:"liquidity",type:"u128"},{name:"amount0Max",type:"u64"},{name:"amount1Max",type:"u64"}]},{name:"closePosition",accounts:[{name:"nftOwner",isMut:!0,isSigner:!0},{name:"positionNftMint",isMut:!0,isSigner:!1},{name:"positionNftAccount",isMut:!0,isSigner:!1},{name:"personalPosition",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"increaseLiquidity",accounts:[{name:"nftOwner",isMut:!1,isSigner:!0},{name:"nftAccount",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"protocolPosition",isMut:!0,isSigner:!1},{name:"personalPosition",isMut:!0,isSigner:!1},{name:"tickArrayLower",isMut:!0,isSigner:!1},{name:"tickArrayUpper",isMut:!0,isSigner:!1},{name:"tokenAccount0",isMut:!0,isSigner:!1},{name:"tokenAccount1",isMut:!0,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"liquidity",type:"u128"},{name:"amount0Max",type:"u64"},{name:"amount1Max",type:"u64"}]},{name:"decreaseLiquidity",accounts:[{name:"nftOwner",isMut:!1,isSigner:!0},{name:"nftAccount",isMut:!1,isSigner:!1},{name:"personalPosition",isMut:!0,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"protocolPosition",isMut:!0,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"tickArrayLower",isMut:!0,isSigner:!1},{name:"tickArrayUpper",isMut:!0,isSigner:!1},{name:"recipientTokenAccount0",isMut:!0,isSigner:!1},{name:"recipientTokenAccount1",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"liquidity",type:"u128"},{name:"amount0Min",type:"u64"},{name:"amount1Min",type:"u64"}]},{name:"swap",accounts:[{name:"payer",isMut:!1,isSigner:!0},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"inputVault",isMut:!0,isSigner:!1},{name:"outputVault",isMut:!0,isSigner:!1},{name:"observationState",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"tickArray",isMut:!0,isSigner:!1}],args:[{name:"amount",type:"u64"},{name:"otherAmountThreshold",type:"u64"},{name:"sqrtPriceLimitX64",type:"u128"},{name:"isBaseInput",type:"bool"}]},{name:"swapRouterBaseIn",accounts:[{name:"payer",isMut:!1,isSigner:!0},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"amountIn",type:"u64"},{name:"amountOutMinimum",type:"u64"}]}],accounts:[{name:"ammConfig",type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"index",type:"u16"},{name:"owner",type:"publicKey"},{name:"protocolFeeRate",type:"u32"},{name:"tradeFeeRate",type:"u32"},{name:"tickSpacing",type:"u16"},{name:"fundFeeRate",type:"u32"},{name:"paddingU32",type:"u32"},{name:"fundOwner",type:"publicKey"},{name:"padding",type:{array:["u64",3]}}]}},{name:"observationState",type:{kind:"struct",fields:[{name:"initialized",type:"bool"},{name:"poolId",type:"publicKey"},{name:"observations",type:{array:[{defined:"Observation"},1e3]}},{name:"padding",type:{array:["u128",5]}}]}},{name:"personalPositionState",type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"nftMint",type:"publicKey"},{name:"poolId",type:"publicKey"},{name:"tickLowerIndex",type:"i32"},{name:"tickUpperIndex",type:"i32"},{name:"liquidity",type:"u128"},{name:"feeGrowthInside0LastX64",type:"u128"},{name:"feeGrowthInside1LastX64",type:"u128"},{name:"tokenFeesOwed0",type:"u64"},{name:"tokenFeesOwed1",type:"u64"},{name:"rewardInfos",type:{array:[{defined:"PositionRewardInfo"},3]}},{name:"padding",type:{array:["u64",8]}}]}},{name:"poolState",type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"ammConfig",type:"publicKey"},{name:"owner",type:"publicKey"},{name:"tokenMint0",type:"publicKey"},{name:"tokenMint1",type:"publicKey"},{name:"tokenVault0",type:"publicKey"},{name:"tokenVault1",type:"publicKey"},{name:"observationKey",type:"publicKey"},{name:"mintDecimals0",type:"u8"},{name:"mintDecimals1",type:"u8"},{name:"tickSpacing",type:"u16"},{name:"liquidity",type:"u128"},{name:"sqrtPriceX64",type:"u128"},{name:"tickCurrent",type:"i32"},{name:"observationIndex",type:"u16"},{name:"observationUpdateDuration",type:"u16"},{name:"feeGrowthGlobal0X64",type:"u128"},{name:"feeGrowthGlobal1X64",type:"u128"},{name:"protocolFeesToken0",type:"u64"},{name:"protocolFeesToken1",type:"u64"},{name:"swapInAmountToken0",type:"u128"},{name:"swapOutAmountToken1",type:"u128"},{name:"swapInAmountToken1",type:"u128"},{name:"swapOutAmountToken0",type:"u128"},{name:"status",type:"u8"},{name:"padding",type:{array:["u8",7]}},{name:"rewardInfos",type:{array:[{defined:"RewardInfo"},3]}},{name:"tickArrayBitmap",type:{array:["u64",16]}},{name:"totalFeesToken0",type:"u64"},{name:"totalFeesClaimedToken0",type:"u64"},{name:"totalFeesToken1",type:"u64"},{name:"totalFeesClaimedToken1",type:"u64"},{name:"fundFeesToken0",type:"u64"},{name:"fundFeesToken1",type:"u64"},{name:"padding1",type:{array:["u64",26]}},{name:"padding2",type:{array:["u64",32]}}]}},{name:"protocolPositionState",type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"poolId",type:"publicKey"},{name:"tickLowerIndex",type:"i32"},{name:"tickUpperIndex",type:"i32"},{name:"liquidity",type:"u128"},{name:"feeGrowthInside0LastX64",type:"u128"},{name:"feeGrowthInside1LastX64",type:"u128"},{name:"tokenFeesOwed0",type:"u64"},{name:"tokenFeesOwed1",type:"u64"},{name:"rewardGrowthInside",type:{array:["u128",3]}},{name:"padding",type:{array:["u64",8]}}]}},{name:"tickArrayState",type:{kind:"struct",fields:[{name:"poolId",type:"publicKey"},{name:"startTickIndex",type:"i32"},{name:"ticks",type:{array:[{defined:"TickState"},60]}},{name:"initializedTickCount",type:"u8"},{name:"padding",type:{array:["u8",115]}}]}}],types:[{name:"InitializeRewardParam",type:{kind:"struct",fields:[{name:"openTime",type:"u64"},{name:"endTime",type:"u64"},{name:"emissionsPerSecondX64",type:"u128"}]}},{name:"Observation",type:{kind:"struct",fields:[{name:"blockTimestamp",type:"u32"},{name:"sqrtPriceX64",type:"u128"},{name:"cumulativeTimePriceX64",type:"u128"},{name:"padding",type:"u128"}]}},{name:"PositionRewardInfo",type:{kind:"struct",fields:[{name:"growthInsideLastX64",type:"u128"},{name:"rewardAmountOwed",type:"u64"}]}},{name:"RewardInfo",type:{kind:"struct",fields:[{name:"rewardState",type:"u8"},{name:"openTime",type:"u64"},{name:"endTime",type:"u64"},{name:"lastUpdateTime",type:"u64"},{name:"emissionsPerSecondX64",type:"u128"},{name:"rewardTotalEmissioned",type:"u64"},{name:"rewardClaimed",type:"u64"},{name:"tokenMint",type:"publicKey"},{name:"tokenVault",type:"publicKey"},{name:"authority",type:"publicKey"},{name:"rewardGrowthGlobalX64",type:"u128"}]}},{name:"TickState",type:{kind:"struct",fields:[{name:"tick",type:"i32"},{name:"liquidityNet",type:"i128"},{name:"liquidityGross",type:"u128"},{name:"feeGrowthOutside0X64",type:"u128"},{name:"feeGrowthOutside1X64",type:"u128"},{name:"rewardGrowthsOutsideX64",type:{array:["u128",3]}},{name:"padding",type:{array:["u32",13]}}]}},{name:"PoolStatusBitIndex",type:{kind:"enum",variants:[{name:"OpenPositionOrIncreaseLiquidity"},{name:"DecreaseLiquidity"},{name:"CollectFee"},{name:"CollectReward"},{name:"Swap"}]}},{name:"PoolStatusBitFlag",type:{kind:"enum",variants:[{name:"Enable"},{name:"Disable"}]}},{name:"RewardState",type:{kind:"enum",variants:[{name:"Uninitialized"},{name:"Initialized"},{name:"Opening"},{name:"Ended"}]}}],events:[{name:"CreateConfigEvent",fields:[{name:"index",type:"u16",index:!1},{name:"owner",type:"publicKey",index:!0},{name:"protocolFeeRate",type:"u32",index:!1},{name:"tradeFeeRate",type:"u32",index:!1},{name:"tickSpacing",type:"u16",index:!1},{name:"fundFeeRate",type:"u32",index:!1},{name:"fundOwner",type:"publicKey",index:!1}]},{name:"UpdaterConfigEvent",fields:[{name:"owner",type:"publicKey",index:!1},{name:"protocolFeeRate",type:"u32",index:!1},{name:"tradeFeeRate",type:"u32",index:!1},{name:"fundFeeRate",type:"u32",index:!1},{name:"fundOwner",type:"publicKey",index:!1}]},{name:"CreatePersonalPositionEvent",fields:[{name:"poolState",type:"publicKey",index:!1},{name:"minter",type:"publicKey",index:!1},{name:"nftOwner",type:"publicKey",index:!1},{name:"tickLowerIndex",type:"i32",index:!1},{name:"tickUpperIndex",type:"i32",index:!1},{name:"liquidity",type:"u128",index:!1},{name:"depositAmount0",type:"u64",index:!1},{name:"depositAmount1",type:"u64",index:!1}]},{name:"IncreaseLiquidityEvent",fields:[{name:"positionNftMint",type:"publicKey",index:!1},{name:"liquidity",type:"u128",index:!1},{name:"amount0",type:"u64",index:!1},{name:"amount1",type:"u64",index:!1}]},{name:"DecreaseLiquidityEvent",fields:[{name:"positionNftMint",type:"publicKey",index:!1},{name:"liquidity",type:"u128",index:!1},{name:"decreaseAmount0",type:"u64",index:!1},{name:"decreaseAmount1",type:"u64",index:!1},{name:"feeAmount0",type:"u64",index:!1},{name:"feeAmount1",type:"u64",index:!1},{name:"rewardAmounts",type:{array:["u64",3]},index:!1}]},{name:"CollectPersonalFeeEvent",fields:[{name:"positionNftMint",type:"publicKey",index:!1},{name:"recipientTokenAccount0",type:"publicKey",index:!1},{name:"recipientTokenAccount1",type:"publicKey",index:!1},{name:"amount0",type:"u64",index:!1},{name:"amount1",type:"u64",index:!1}]},{name:"UpdateRewardInfosEvent",fields:[{name:"rewardGrowthGlobalX64",type:{array:["u128",3]},index:!1}]},{name:"PoolCreatedEvent",fields:[{name:"tokenMint0",type:"publicKey",index:!1},{name:"tokenMint1",type:"publicKey",index:!1},{name:"tickSpacing",type:"u16",index:!1},{name:"poolState",type:"publicKey",index:!1},{name:"sqrtPriceX64",type:"u128",index:!1},{name:"tick",type:"i32",index:!1},{name:"tokenVault0",type:"publicKey",index:!1},{name:"tokenVault1",type:"publicKey",index:!1}]},{name:"CollectProtocolFeeEvent",fields:[{name:"poolState",type:"publicKey",index:!1},{name:"recipientTokenAccount0",type:"publicKey",index:!1},{name:"recipientTokenAccount1",type:"publicKey",index:!1},{name:"amount0",type:"u64",index:!1},{name:"amount1",type:"u64",index:!1}]},{name:"SwapEvent",fields:[{name:"poolState",type:"publicKey",index:!1},{name:"sender",type:"publicKey",index:!1},{name:"tokenAccount0",type:"publicKey",index:!1},{name:"tokenAccount1",type:"publicKey",index:!1},{name:"amount0",type:"u64",index:!1},{name:"amount1",type:"u64",index:!1},{name:"zeroForOne",type:"bool",index:!1},{name:"sqrtPriceX64",type:"u128",index:!1},{name:"liquidity",type:"u128",index:!1},{name:"tick",type:"i32",index:!1}]}],errors:[{code:6e3,name:"LOK",msg:"LOK"},{code:6001,name:"NotApproved",msg:"Not approved"},{code:6002,name:"InvalidUpdateConfigFlag",msg:"invalid update amm config flag"},{code:6003,name:"AccountLack",msg:"Account lack"},{code:6004,name:"ClosePositionErr",msg:"Remove liquitity, collect fees owed and reward then you can close position account"},{code:6005,name:"ZeroMintAmount",msg:"Minting amount should be greater than 0"},{code:6006,name:"InvaildTickIndex",msg:"Tick index of lower must be smaller than upper"},{code:6007,name:"TickInvaildOrder",msg:"The lower tick must be below the upper tick"},{code:6008,name:"TickLowerOverflow",msg:"The tick must be greater, or equal to the minimum tick(-221818)"},{code:6009,name:"TickUpperOverflow",msg:"The tick must be lesser than, or equal to the maximum tick(221818)"},{code:6010,name:"TickAndSpacingNotMatch",msg:"tick % tick_spacing must be zero"},{code:6011,name:"InvalidTickArray",msg:"Invaild tick array account"},{code:6012,name:"SqrtPriceLimitOverflow",msg:"Square root price limit overflow"},{code:6013,name:"SqrtPriceX64",msg:"sqrt_price_x64 out of range"},{code:6014,name:"LiquiditySubValueErr",msg:"Liquidity sub delta L must be smaller than before"},{code:6015,name:"LiquidityAddValueErr",msg:"Liquidity add delta L must be greater, or equal to before"},{code:6016,name:"InvaildLiquidity",msg:"Invaild liquidity when update position"},{code:6017,name:"ForbidBothZeroForSupplyLiquidity",msg:"Both token amount must not be zero while supply liquidity"},{code:6018,name:"TransactionTooOld",msg:"Transaction too old"},{code:6019,name:"PriceSlippageCheck",msg:"Price slippage check"},{code:6020,name:"TooLittleOutputReceived",msg:"Too little output received"},{code:6021,name:"TooMuchInputPaid",msg:"Too much input paid"},{code:6022,name:"InvaildSwapAmountSpecified",msg:"Swap special amount can not be zero"},{code:6023,name:"InvalidInputPoolVault",msg:"Input pool vault is invalid"},{code:6024,name:"TooSmallInputOrOutputAmount",msg:"Swap input or output amount is too small"},{code:6025,name:"InvalidRewardIndex",msg:"Invalid reward index"},{code:6026,name:"FullRewardInfo",msg:"The init reward token reach to the max"},{code:6027,name:"RewardTokenAlreadyInUse",msg:"The init reward token already in use"},{code:6028,name:"ExceptPoolVaultMint",msg:"The reward tokens must contain one of pool vault mint except the last reward"},{code:6029,name:"InvalidRewardInitParam",msg:"Invalid reward init param"},{code:6030,name:"InvalidRewardDesiredAmount",msg:"Invalid collect reward desired amount"},{code:6031,name:"InvalidRewardInputAccountNumber",msg:"Invalid collect reward input account number"},{code:6032,name:"InvalidRewardPeriod",msg:"Invalid reward period"},{code:6033,name:"NotApproveUpdateRewardEmissiones",msg:"Modification of emissiones is allowed within 72 hours from the end of the previous cycle"},{code:6034,name:"UnInitializedRewardInfo",msg:"uninitialized reward info"}]};exports.Amm = me; exports.IDL = rt; exports.TICK_ARRAY_BITMAP_SIZE = we; exports.TICK_ARRAY_SIZE = M; exports.TickUtils = k; exports.getPdaTickArrayAddress = h;
