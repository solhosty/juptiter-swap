{"version":3,"file":"publicKey.js","sourceRoot":"","sources":["../../../src/utils/publicKey.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAE,MAAM,OAAO,CAAC;AAEvB,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C;;;;GAIG;AACH,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,EAAW,EAAoB,EAAE;IAC9D,IAAI,CAAC,EAAE,EAAE;QACP,OAAO,IAAI,CAAC;KACb;IAED,IAAI,EAAE,YAAY,SAAS,EAAE;QAC3B,OAAO,EAAE,CAAC;KACX;IAED,IACE,OAAO,EAAE,KAAK,QAAQ;QACtB,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;QACjB,CAAC,aAAa,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EACpC;QACA,OAAO,IAAI,CAAC;KACb;IAED,IAAI;QACF,OAAO,IAAI,SAAS,CAAC,EAAmB,CAAC,CAAC;KAC3C;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,IAAI,CAAC;KACb;AACH,CAAC,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,EAAW,EAAmB,EAAE;IAC1D,OAAO,CAAC,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;AAC9B,CAAC,CAAC","sourcesContent":["import type { PublicKeyData } from \"@solana/web3.js\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport BN from \"bn.js\";\n\nexport { PublicKey } from \"@solana/web3.js\";\n\n/**\n * Returns a {@link PublicKey} if it can be parsed, otherwise returns null.\n * @param pk\n * @returns\n */\nexport const parsePublicKey = (pk: unknown): PublicKey | null => {\n  if (!pk) {\n    return null;\n  }\n\n  if (pk instanceof PublicKey) {\n    return pk;\n  }\n\n  if (\n    typeof pk !== \"object\" ||\n    Array.isArray(pk) ||\n    (\"constructor\" in pk && BN.isBN(pk))\n  ) {\n    return null;\n  }\n\n  try {\n    return new PublicKey(pk as PublicKeyData);\n  } catch (e) {\n    return null;\n  }\n};\n\n/**\n * Returns true if the given value is a {@link PublicKey}.\n * @param pk\n * @returns\n */\nexport const isPublicKey = (pk: unknown): pk is PublicKey => {\n  return !!parsePublicKey(pk);\n};\n"]}