{"version":3,"file":"provider.js","sourceRoot":"","sources":["../../../src/utils/provider.ts"],"names":[],"mappings":";;;;AAIA,sEAAgD;AAMhD,4DAGiC;AAWjC,MAAM,YAAY,GAAG,MAAM,CAAC;AAE5B;;GAEG;AACU,QAAA,mBAAmB,GAE9B,gBAAgB,IAAI,YAAY;IAC9B,CAAC,CAAC,YAAY,CAAC,cAAc;IAC7B,CAAC,CACG,YAGD,CAAC,QAAQ,CAAC;AAWjB;;;;;;;GAOG;AACI,MAAM,mBAAmB,GAAG,CACjC,UAAsB,EACtB,MAAc,EACd,IAAoB,EACpB,EAAE;IACF,OAAO,IAAI,2BAAmB,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AAC3D,CAAC,CAAC;AANW,QAAA,mBAAmB,uBAM9B;AAEF;;;;GAIG;AACI,MAAM,yBAAyB,GAAG,CACvC,cAA+B,EACR,EAAE;IACzB,OAAO,IAAI,uCAAsB,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;AAC/D,CAAC,CAAC;AAJW,QAAA,yBAAyB,6BAIpC;AAEF;;;;GAIG;AACI,MAAM,iBAAiB,GAAG,CAC/B,cAA8B,EACf,EAAE;IACjB,OAAO,+BAAc,CAAC,IAAI,CAAC;QACzB,UAAU,EAAE,cAAc,CAAC,UAAU;QACrC,MAAM,EAAE,cAAc,CAAC,MAAM;QAC7B,IAAI,EAAE,cAAc,CAAC,IAAI;KAC1B,CAAC,CAAC;AACL,CAAC,CAAC;AARW,QAAA,iBAAiB,qBAQ5B;AAEF;;;;GAIG;AACI,MAAM,kBAAkB,GAAG,CAChC,aAAoC,EACpB,EAAE;IAClB,OAAO,IAAA,2BAAmB,EACxB,aAAa,CAAC,UAAU,EACxB,aAAa,CAAC,MAAM,EACpB,aAAa,CAAC,IAAI,CACnB,CAAC;AACJ,CAAC,CAAC;AARW,QAAA,kBAAkB,sBAQ7B","sourcesContent":["import type {\n  AnchorProvider as AnchorProviderImpl,\n  Provider as IAnchorProvider,\n} from \"@project-serum/anchor\";\nimport * as anchor from \"@project-serum/anchor\";\nimport type {\n  Provider as SaberProvider,\n  ReadonlyProvider as ReadonlySaberProvider,\n  Wallet,\n} from \"@saberhq/solana-contrib\";\nimport {\n  SolanaProvider,\n  SolanaReadonlyProvider,\n} from \"@saberhq/solana-contrib\";\nimport type { ConfirmOptions, Connection } from \"@solana/web3.js\";\n\n/**\n * Interface of an AnchorProvider.\n */\nexport interface AnchorProvider extends IAnchorProvider {\n  wallet: Wallet;\n  opts: ConfirmOptions;\n}\n\nconst anchorModule = anchor;\n\n/**\n * Class used to create new {@link AnchorProvider}s.\n */\nexport const AnchorProviderClass: AnchorProviderCtor &\n  typeof AnchorProviderImpl =\n  \"AnchorProvider\" in anchorModule\n    ? anchorModule.AnchorProvider\n    : (\n        anchorModule as unknown as {\n          Provider: AnchorProviderCtor & typeof AnchorProviderImpl;\n        }\n      ).Provider;\n\n/**\n * Constructor for an Anchor provider.\n */\nexport type AnchorProviderCtor = new (\n  connection: Connection,\n  wallet: Wallet,\n  opts: ConfirmOptions\n) => AnchorProvider;\n\n/**\n * Create a new Anchor provider.\n *\n * @param connection\n * @param wallet\n * @param opts\n * @returns\n */\nexport const buildAnchorProvider = (\n  connection: Connection,\n  wallet: Wallet,\n  opts: ConfirmOptions\n) => {\n  return new AnchorProviderClass(connection, wallet, opts);\n};\n\n/**\n * Creates a readonly Saber Provider from an Anchor provider.\n * @param anchorProvider The Anchor provider.\n * @returns\n */\nexport const makeReadonlySaberProvider = (\n  anchorProvider: IAnchorProvider\n): ReadonlySaberProvider => {\n  return new SolanaReadonlyProvider(anchorProvider.connection);\n};\n\n/**\n * Creates a Saber Provider from an Anchor provider.\n * @param anchorProvider The Anchor provider.\n * @returns\n */\nexport const makeSaberProvider = (\n  anchorProvider: AnchorProvider\n): SaberProvider => {\n  return SolanaProvider.init({\n    connection: anchorProvider.connection,\n    wallet: anchorProvider.wallet,\n    opts: anchorProvider.opts,\n  });\n};\n\n/**\n * Creates an Anchor Provider from a Saber provider.\n * @param saberProvider\n * @returns\n */\nexport const makeAnchorProvider = (\n  saberProvider: ReadonlySaberProvider\n): AnchorProvider => {\n  return buildAnchorProvider(\n    saberProvider.connection,\n    saberProvider.wallet,\n    saberProvider.opts\n  );\n};\n"]}