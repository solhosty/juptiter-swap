"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@solana/spl-token"),t=require("promise-retry"),o=require("@solana/web3.js");function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=r(t);class s extends Error{constructor(e,t,o,r){super(e),this.txid=void 0,this.code=void 0,this.programIds=void 0,this.txid=t,this.code=o,this.programIds=r,Object.setPrototypeOf(this,Error.prototype)}}const a="Unknown error, visit the explorer",i="So11111111111111111111111111111111111111112";async function c(t,r){const n=await e.Token.getAssociatedTokenAddress(e.ASSOCIATED_TOKEN_PROGRAM_ID,e.TOKEN_PROGRAM_ID,new o.PublicKey(i),r);return{address:n,accountInfo:await t.getAccountInfo(n)}}exports.PROGRAM_FAILED_TO_COMPLETE_ERROR="Program failed to complete",exports.TransactionError=s,exports.UNKNOWN_ERROR=a,exports.createAndTransferWSOLInstructions=async function(t,r,n){const s=await c(t,r),a=[];s.accountInfo||a.push(e.Token.createAssociatedTokenAccountInstruction(e.ASSOCIATED_TOKEN_PROGRAM_ID,e.TOKEN_PROGRAM_ID,new o.PublicKey(i),s.address,r,r)),a.push(o.SystemProgram.transfer({fromPubkey:r,toPubkey:s.address,lamports:n})),a.push(e.Token.createSyncNativeInstruction(e.TOKEN_PROGRAM_ID,s.address));const{blockhash:u,lastValidBlockHeight:l}=await t.getLatestBlockhash(),d=new o.Transaction({feePayer:r,blockhash:u,lastValidBlockHeight:l});return d.add(...a),d},exports.createUnwrapSolInstructions=async function(t,r){const n=await c(t,r),s=[];if(!n.accountInfo)return;s.push(e.Token.createCloseAccountInstruction(e.TOKEN_PROGRAM_ID,n.address,r,r,[]));const{blockhash:a,lastValidBlockHeight:i}=await t.getLatestBlockhash(),u=new o.Transaction({feePayer:r,blockhash:a,lastValidBlockHeight:i});return u.add(...s),u},exports.deserializeAccount=t=>{if(null==t||0==t.length)return;const r=e.AccountLayout.decode(t);return r.mint=new o.PublicKey(r.mint),r.owner=new o.PublicKey(r.owner),r.amount=e.u64.fromBuffer(r.amount),0===r.delegateOption?(r.delegate=null,r.delegatedAmount=new e.u64(0)):(r.delegate=new o.PublicKey(r.delegate),r.delegatedAmount=e.u64.fromBuffer(r.delegatedAmount)),r.isInitialized=0!==r.state,r.isFrozen=2===r.state,1===r.isNativeOption?(r.rentExemptReserve=e.u64.fromBuffer(r.isNative),r.isNative=!0):(r.rentExemptReserve=null,r.isNative=!1),r.closeAuthority=0===r.closeAuthorityOption?null:new o.PublicKey(r.closeAuthority),r},exports.deserializeMint=(t,r)=>{if(t.length!==e.MintLayout.span)return;const n=e.MintLayout.decode(t);return n.address=r,n.mintAuthority=0===n.mintAuthorityOption?null:new o.PublicKey(n.mintAuthority),n.supply=e.u64.fromBuffer(n.supply),n.isInitialized=0!==n.isInitialized,n.freezeAuthority=0===n.freezeAuthorityOption?null:new o.PublicKey(n.freezeAuthority),n},exports.parseErrorForTransaction=function(t){var o;const r=[];if(null!=t&&t.meta&&t.meta.logMessages&&t.meta.logMessages.forEach((e=>{const t=/Error: (.*)/gm;let o;for(;null!==(o=t.exec(e));)o.index===t.lastIndex&&t.lastIndex++,o.length>1&&r.push(o[1])})),r.length>0)return{message:r.join(",")};const n=null==t||null===(o=t.meta)||void 0===o?void 0:o.err;let s;if(n&&"string"!=typeof n){if("InsufficientFundsForRent"in n)return{message:"Insufficient funds for rent",code:1,programIds:[e.TOKEN_PROGRAM_ID.toBase58()]};{const e=n.InstructionError,[o,r]=e;var i;if("string"==typeof r){if("ProgramFailedToComplete"===r&&null!=t&&t.meta&&t.meta.logMessages){var c;const e=function(e){let t=[];for(let o=0;o<e.length;o++){const r=e[o].match(new RegExp(/Program (\S+) failed: Program failed to complete/));r&&t.push(r[1])}return t}(null===(c=t.meta)||void 0===c?void 0:c.logMessages);if(e.length>0)return{message:"Program failed to complete",programIds:e,code:s}}}else if(s=null!==(i=r.Custom)&&void 0!==i?i:e[1],null!=t&&t.meta&&t.meta.logMessages){var u;const o=function(e,t){for(let o=0;o<e.length;o++){const r=e[o].match(new RegExp(`Program ([1-9A-HJ-NP-Za-km-z]{32,44}) failed: custom program error: 0x${t.toString(16)}`));if(r)return r[1]}}(null===(u=t.meta)||void 0===u?void 0:u.logMessages,s);if(o)return"11111111111111111111111111111111"===o?function(e){const t=e[1].Custom;let o="";switch(t){case 0:o="An account with the same address already exists";break;case 1:o="The account does not have enough SOL to perform the operation";break;default:o=a}return{code:t,programIds:["11111111111111111111111111111111"],message:o}}(e):{message:a,programIds:[o],code:s}}}}return{message:"string"==typeof n?n:a,code:s}},exports.pollForConfirmedTransaction=async function(e,t){return n.default((async o=>{const r=await e.getTransaction(t,{commitment:"confirmed"});return r||o(new s("Transaction was not confirmed",t)),r}),{retries:30,minTimeout:500}).catch((()=>null))};
//# sourceMappingURL=optimist.cjs.production.min.js.map
