{"version":3,"file":"programs.js","sourceRoot":"","sources":["../../../src/utils/programs.ts"],"names":[],"mappings":";;;;AACA,kDAAgD;AAMhD,gFAAyC;AAEzC,+CAAmD;AAEnD;;;;;;;GAOG;AACI,MAAM,UAAU,GAAG,CACxB,GAAQ,EACR,OAAkB,EAClB,QAA+C,EAC/C,EAAE;IACF,OAAO,IAAI,gBAAO,CAChB,GAAG,EACH,OAAO,CAAC,QAAQ,EAAE,EAClB,IAAA,gCAAkB,EAAC,QAAQ,CAAC,CACb,CAAC;AACpB,CAAC,CAAC;AAVW,QAAA,UAAU,cAUrB;AAEF;;;;;;GAMG;AACI,MAAM,aAAa,GAAG,CAC3B,QAA+C,EAC/C,IAEC,EACD,SAEC,EAGD,EAAE;IACF,OAAO,IAAA,0BAAS,EAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAU,EAAE,EAAE,CACzC,IAAA,kBAAU,EAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAGxC,CAAC;AACJ,CAAC,CAAC;AAhBW,QAAA,aAAa,iBAgBxB","sourcesContent":["import type { Idl } from \"@project-serum/anchor\";\nimport { Program } from \"@project-serum/anchor\";\nimport type {\n  Provider as SaberProvider,\n  ReadonlyProvider as ReadonlySaberProvider,\n} from \"@saberhq/solana-contrib\";\nimport type { PublicKey } from \"@solana/web3.js\";\nimport mapValues from \"lodash.mapvalues\";\n\nimport { makeAnchorProvider } from \"./provider.js\";\n\n/**\n * Builds a program from its IDL.\n *\n * @param idl\n * @param address\n * @param provider\n * @returns\n */\nexport const newProgram = <P>(\n  idl: Idl,\n  address: PublicKey,\n  provider: SaberProvider | ReadonlySaberProvider\n) => {\n  return new Program(\n    idl,\n    address.toString(),\n    makeAnchorProvider(provider)\n  ) as unknown as P;\n};\n\n/**\n * Builds a map of programs from their IDLs and addresses.\n *\n * @param provider\n * @param programs\n * @returns\n */\nexport const newProgramMap = <P>(\n  provider: SaberProvider | ReadonlySaberProvider,\n  idls: {\n    [K in keyof P]: Idl;\n  },\n  addresses: {\n    [K in keyof P]: PublicKey;\n  }\n): {\n  [K in keyof P]: P[K];\n} => {\n  return mapValues(idls, (idl, k: keyof P) =>\n    newProgram(idl, addresses[k], provider)\n  ) as unknown as {\n    [K in keyof P]: P[K];\n  };\n};\n"]}