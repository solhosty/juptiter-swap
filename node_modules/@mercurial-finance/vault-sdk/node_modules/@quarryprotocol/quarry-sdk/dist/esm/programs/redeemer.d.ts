import type { AnchorTypes } from "@saberhq/anchor-contrib";
import type { TransactionEnvelope } from "@saberhq/solana-contrib";
import type { u64 } from "@saberhq/token-utils";
import type { PublicKey } from "@solana/web3.js";
import type { QuarryRedeemerIDL } from "../idls/quarry_redeemer";
export * from "../idls/quarry_redeemer";
export declare type RedeemerTypes = AnchorTypes<QuarryRedeemerIDL, {
    redeemer: RedeemerData;
}>;
declare type Accounts = RedeemerTypes["Accounts"];
export declare type RedeemerData = Accounts["Redeemer"];
export declare type RedeemerError = RedeemerTypes["Error"];
export declare type RedeemerEvents = RedeemerTypes["Events"];
export declare type RedeemerProgram = RedeemerTypes["Program"];
export declare type PendingRedeemer = {
    bump: number;
    vaultTokenAccount: PublicKey;
    tx: TransactionEnvelope;
};
export declare type RedeemTokenArgs = {
    tokenAmount: u64;
    sourceAuthority: PublicKey;
    iouSource: PublicKey;
    redemptionDestination: PublicKey;
};
//# sourceMappingURL=redeemer.d.ts.map