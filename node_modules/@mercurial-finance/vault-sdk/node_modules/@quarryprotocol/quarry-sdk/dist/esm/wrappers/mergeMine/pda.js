import { __awaiter } from "tslib";
import { utils } from "@project-serum/anchor";
import { PublicKey } from "@solana/web3.js";
import { QUARRY_ADDRESSES } from "../../constants";
/**
 * Finds the address of the Pool.
 * @returns
 */
export const findPoolAddress = ({ programId = QUARRY_ADDRESSES.MergeMine, primaryMint, }) => __awaiter(void 0, void 0, void 0, function* () {
    return yield PublicKey.findProgramAddress([utils.bytes.utf8.encode("MergePool"), primaryMint.toBuffer()], programId);
});
/**
 * Finds the address of the Pool.
 * @returns
 */
export const findReplicaMintAddress = ({ programId = QUARRY_ADDRESSES.MergeMine, primaryMint, }) => __awaiter(void 0, void 0, void 0, function* () {
    const [pool] = yield findPoolAddress({ programId, primaryMint });
    return yield PublicKey.findProgramAddress([utils.bytes.utf8.encode("ReplicaMint"), pool.toBuffer()], programId);
});
/**
 * Finds the address of the Merge Miner.
 * @returns
 */
export const findMergeMinerAddress = ({ programId = QUARRY_ADDRESSES.MergeMine, pool, owner, }) => __awaiter(void 0, void 0, void 0, function* () {
    return yield PublicKey.findProgramAddress([utils.bytes.utf8.encode("MergeMiner"), pool.toBuffer(), owner.toBuffer()], programId);
});
//# sourceMappingURL=pda.js.map