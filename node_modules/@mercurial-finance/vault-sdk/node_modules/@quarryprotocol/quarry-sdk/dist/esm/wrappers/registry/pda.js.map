{"version":3,"file":"pda.js","sourceRoot":"","sources":["../../../../src/wrappers/registry/pda.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC9C,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAEnD,MAAM,CAAC,MAAM,mBAAmB,GAAG,CACjC,WAAsB,EACtB,YAAuB,gBAAgB,CAAC,QAAQ,EAClB,EAAE;IAChC,OAAO,MAAM,SAAS,CAAC,kBAAkB,CACvC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,EAAE,WAAW,CAAC,OAAO,EAAE,CAAC,EAClE,SAAS,CACV,CAAC;AACJ,CAAC,CAAA,CAAC","sourcesContent":["import { utils } from \"@project-serum/anchor\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport { QUARRY_ADDRESSES } from \"../../constants\";\n\nexport const findRegistryAddress = async (\n  rewarderKey: PublicKey,\n  programID: PublicKey = QUARRY_ADDRESSES.Registry\n): Promise<[PublicKey, number]> => {\n  return await PublicKey.findProgramAddress(\n    [utils.bytes.utf8.encode(\"QuarryRegistry\"), rewarderKey.toBytes()],\n    programID\n  );\n};\n"]}