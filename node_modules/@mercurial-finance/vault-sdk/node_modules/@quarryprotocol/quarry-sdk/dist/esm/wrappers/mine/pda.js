import { __awaiter } from "tslib";
import { utils } from "@project-serum/anchor";
import { PublicKey } from "@solana/web3.js";
import { QUARRY_ADDRESSES } from "../../constants";
export const findRewarderAddress = (base, programID = QUARRY_ADDRESSES.Mine) => __awaiter(void 0, void 0, void 0, function* () {
    return yield PublicKey.findProgramAddress([Buffer.from(utils.bytes.utf8.encode("Rewarder")), base.toBytes()], programID);
});
export const findQuarryAddress = (rewarder, tokenMint, programID = QUARRY_ADDRESSES.Mine) => __awaiter(void 0, void 0, void 0, function* () {
    return yield PublicKey.findProgramAddress([
        Buffer.from(utils.bytes.utf8.encode("Quarry")),
        rewarder.toBytes(),
        tokenMint.toBytes(),
    ], programID);
});
export const findMinerAddress = (quarry, authority, programID = QUARRY_ADDRESSES.Mine) => __awaiter(void 0, void 0, void 0, function* () {
    return yield PublicKey.findProgramAddress([
        Buffer.from(utils.bytes.utf8.encode("Miner")),
        quarry.toBytes(),
        authority.toBytes(),
    ], programID);
});
//# sourceMappingURL=pda.js.map