import type { AugmentedProvider, TransactionEnvelope } from "@saberhq/solana-contrib";
import type { PublicKey, Signer } from "@solana/web3.js";
import type { MineProgram } from "../../programs/mine";
import type { QuarrySDK } from "../../sdk";
import { RewarderWrapper } from "./rewarder";
export declare class MineWrapper {
    readonly sdk: QuarrySDK;
    constructor(sdk: QuarrySDK);
    get provider(): AugmentedProvider;
    get program(): MineProgram;
    /**
     *
     * @deprecated Use {@link createRewarder}.
     * @param param0
     * @returns
     */
    createRewarderV1({ mintWrapper, baseKP, authority, }: {
        mintWrapper: PublicKey;
        baseKP?: Signer;
        authority?: PublicKey;
    }): Promise<{
        key: PublicKey;
        tx: TransactionEnvelope;
    }>;
    /**
     * Creates a new Rewarder.
     * @param param0
     * @returns
     */
    createRewarder({ mintWrapper, baseKP, authority, }: {
        mintWrapper: PublicKey;
        baseKP?: Signer;
        authority?: PublicKey;
    }): Promise<{
        key: PublicKey;
        tx: TransactionEnvelope;
    }>;
    /**
     * Loads the rewarder wrapper.
     * @param rewarder
     * @returns
     */
    loadRewarderWrapper(rewarder: PublicKey): Promise<RewarderWrapper>;
    /**
     * Rescue stuck tokens in a miner.
     * @returns
     */
    rescueTokens({ mint, miner, minerTokenAccount, owner, }: {
        mint: PublicKey;
        miner: PublicKey;
        minerTokenAccount: PublicKey;
        owner?: PublicKey;
    }): Promise<TransactionEnvelope>;
}
//# sourceMappingURL=mine.d.ts.map