{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/wrappers/redeemer/index.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAC;AAC9D,OAAO,EACL,aAAa,EACb,cAAc,EACd,gBAAgB,GACjB,MAAM,sBAAsB,CAAC;AAE9B,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAShD,OAAO,EAAE,eAAe,EAAE,MAAM,OAAO,CAAC;AAExC,cAAc,OAAO,CAAC;AAEtB,MAAM,OAAO,eAAe;IAC1B,YACW,GAAc,EACd,OAAkB,EAClB,cAAyB,EACzB,GAAc,EACd,IAAkB;QAJlB,QAAG,GAAH,GAAG,CAAW;QACd,YAAO,GAAP,OAAO,CAAW;QAClB,mBAAc,GAAd,cAAc,CAAW;QACzB,QAAG,GAAH,GAAG,CAAW;QACd,SAAI,GAAJ,IAAI,CAAc;IAC1B,CAAC;IAEJ,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC;IACpC,CAAC;IAED,MAAM,CAAO,IAAI,CAAC,EAChB,GAAG,EACH,OAAO,EACP,cAAc,GAKf;;YACC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,eAAe,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;YACtE,MAAM,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACtC,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC5D,OAAO,IAAI,eAAe,CAAC,GAAG,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC3E,CAAC;KAAA;IAED,MAAM,CAAO,cAAc,CAAC,EAC1B,GAAG,EACH,OAAO,EACP,cAAc,GAKf;;YACC,MAAM,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC;YACzB,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,MAAM,eAAe,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;YAC5E,MAAM,GAAG,GAAG,MAAM,cAAc,CAAC;gBAC/B,QAAQ;gBACR,IAAI,EAAE,cAAc;gBACpB,KAAK,EAAE,QAAQ;aAChB,CAAC,CAAC;YACH,OAAO;gBACL,IAAI;gBACJ,iBAAiB,EAAE,GAAG,CAAC,OAAO;gBAC9B,EAAE,EAAE,IAAI,mBAAmB,CAAC,GAAG,CAAC,QAAQ,EAAE;oBACxC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;oBAC7C,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,EAAE;wBACrD,QAAQ,EAAE;4BACR,QAAQ;4BACR,OAAO;4BACP,cAAc;4BACd,KAAK,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS;4BAChC,aAAa,EAAE,aAAa,CAAC,SAAS;yBACvC;qBACF,CAAC;iBACH,CAAC;aACH,CAAC;QACJ,CAAC;KAAA;IAED;;OAEG;IACG,cAAc,CAAC,IAAqB;;YACxC,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE;gBAC7D,QAAQ,EAAE,MAAM,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;aAClD,CAAC,CAAC;QACL,CAAC;KAAA;IAEK,YAAY,CAAC,IAAqB;;YACtC,OAAO,IAAI,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;gBAChD,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;aAChC,CAAC,CAAC;QACL,CAAC;KAAA;IAEK,eAAe;;YACnB,OAAO,MAAM,aAAa,CAAC;gBACzB,IAAI,EAAE,IAAI,CAAC,cAAc;gBACzB,KAAK,EAAE,IAAI,CAAC,GAAG;aAChB,CAAC,CAAC;QACL,CAAC;KAAA;IAEK,sBAAsB,CAC1B,IAA0C;;YAW1C,MAAM,EAAE,SAAS,EAAE,qBAAqB,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC;YACnE,OAAO;gBACL,QAAQ,EAAE,IAAI,CAAC,GAAG;gBAClB,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO;gBAC1B,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc;gBACxC,eAAe,EAAE,MAAM,aAAa,CAAC;oBACnC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc;oBAC9B,KAAK,EAAE,IAAI,CAAC,GAAG;iBAChB,CAAC;gBACF,YAAY,EAAE,gBAAgB;gBAC9B,eAAe;gBACf,SAAS;gBACT,qBAAqB;aACtB,CAAC;QACJ,CAAC;KAAA;CACF","sourcesContent":["import { TransactionEnvelope } from \"@saberhq/solana-contrib\";\nimport {\n  getATAAddress,\n  getOrCreateATA,\n  TOKEN_PROGRAM_ID,\n} from \"@saberhq/token-utils\";\nimport type { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { SystemProgram } from \"@solana/web3.js\";\n\nimport type { QuarrySDK } from \"../..\";\nimport type {\n  PendingRedeemer,\n  RedeemerData,\n  RedeemerProgram,\n  RedeemTokenArgs,\n} from \"../../programs/redeemer\";\nimport { findRedeemerKey } from \"./pda\";\n\nexport * from \"./pda\";\n\nexport class RedeemerWrapper {\n  constructor(\n    readonly sdk: QuarrySDK,\n    readonly iouMint: PublicKey,\n    readonly redemptionMint: PublicKey,\n    readonly key: PublicKey,\n    readonly data: RedeemerData\n  ) {}\n\n  get program(): RedeemerProgram {\n    return this.sdk.programs.Redeemer;\n  }\n\n  static async load({\n    sdk,\n    iouMint,\n    redemptionMint,\n  }: {\n    sdk: QuarrySDK;\n    iouMint: PublicKey;\n    redemptionMint: PublicKey;\n  }): Promise<RedeemerWrapper> {\n    const [redeemer] = await findRedeemerKey({ iouMint, redemptionMint });\n    const program = sdk.programs.Redeemer;\n    const data = await program.account.redeemer.fetch(redeemer);\n    return new RedeemerWrapper(sdk, iouMint, redemptionMint, redeemer, data);\n  }\n\n  static async createRedeemer({\n    sdk,\n    iouMint,\n    redemptionMint,\n  }: {\n    sdk: QuarrySDK;\n    iouMint: PublicKey;\n    redemptionMint: PublicKey;\n  }): Promise<PendingRedeemer> {\n    const { provider } = sdk;\n    const [redeemer, bump] = await findRedeemerKey({ iouMint, redemptionMint });\n    const ata = await getOrCreateATA({\n      provider,\n      mint: redemptionMint,\n      owner: redeemer,\n    });\n    return {\n      bump,\n      vaultTokenAccount: ata.address,\n      tx: new TransactionEnvelope(sdk.provider, [\n        ...(ata.instruction ? [ata.instruction] : []),\n        sdk.programs.Redeemer.instruction.createRedeemer(bump, {\n          accounts: {\n            redeemer,\n            iouMint,\n            redemptionMint,\n            payer: provider.wallet.publicKey,\n            systemProgram: SystemProgram.programId,\n          },\n        }),\n      ]),\n    };\n  }\n\n  /**\n   * redeemTokensIx\n   */\n  async redeemTokensIx(args: RedeemTokenArgs): Promise<TransactionInstruction> {\n    return this.program.instruction.redeemTokens(args.tokenAmount, {\n      accounts: await this.getRedeemTokenAccounts(args),\n    });\n  }\n\n  async redeemTokens(args: RedeemTokenArgs): Promise<TransactionEnvelope> {\n    return new TransactionEnvelope(this.sdk.provider, [\n      await this.redeemTokensIx(args),\n    ]);\n  }\n\n  async getVaultAddress(): Promise<PublicKey> {\n    return await getATAAddress({\n      mint: this.redemptionMint,\n      owner: this.key,\n    });\n  }\n\n  async getRedeemTokenAccounts(\n    args: Omit<RedeemTokenArgs, \"tokenAmount\">\n  ): Promise<{\n    redeemer: PublicKey;\n    iouMint: PublicKey;\n    redemptionMint: PublicKey;\n    redemptionVault: PublicKey;\n    tokenProgram: PublicKey;\n    sourceAuthority: PublicKey;\n    iouSource: PublicKey;\n    redemptionDestination: PublicKey;\n  }> {\n    const { iouSource, redemptionDestination, sourceAuthority } = args;\n    return {\n      redeemer: this.key,\n      iouMint: this.data.iouMint,\n      redemptionMint: this.data.redemptionMint,\n      redemptionVault: await getATAAddress({\n        mint: this.data.redemptionMint,\n        owner: this.key,\n      }),\n      tokenProgram: TOKEN_PROGRAM_ID,\n      sourceAuthority,\n      iouSource,\n      redemptionDestination,\n    };\n  }\n}\n"]}