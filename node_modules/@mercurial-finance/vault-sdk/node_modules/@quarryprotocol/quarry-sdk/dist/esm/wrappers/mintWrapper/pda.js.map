{"version":3,"file":"pda.js","sourceRoot":"","sources":["../../../../src/wrappers/mintWrapper/pda.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,uBAAuB,CAAC;AAC9C,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAE5C,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAEnD,MAAM,CAAC,MAAM,sBAAsB,GAAG,CACpC,IAAe,EACf,YAAuB,gBAAgB,CAAC,WAAW,EACrB,EAAE;IAChC,OAAO,MAAM,SAAS,CAAC,kBAAkB,CACvC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,EACrE,SAAS,CACV,CAAC;AACJ,CAAC,CAAA,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAC/B,OAAkB,EAClB,SAAoB,EACpB,YAAuB,gBAAgB,CAAC,WAAW,EACrB,EAAE;IAChC,OAAO,MAAM,SAAS,CAAC,kBAAkB,CACvC;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;QACzD,OAAO,CAAC,OAAO,EAAE;QACjB,SAAS,CAAC,OAAO,EAAE;KACpB,EACD,SAAS,CACV,CAAC;AACJ,CAAC,CAAA,CAAC","sourcesContent":["import { utils } from \"@project-serum/anchor\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport { QUARRY_ADDRESSES } from \"../../constants\";\n\nexport const findMintWrapperAddress = async (\n  base: PublicKey,\n  programID: PublicKey = QUARRY_ADDRESSES.MintWrapper\n): Promise<[PublicKey, number]> => {\n  return await PublicKey.findProgramAddress(\n    [Buffer.from(utils.bytes.utf8.encode(\"MintWrapper\")), base.toBytes()],\n    programID\n  );\n};\n\nexport const findMinterAddress = async (\n  wrapper: PublicKey,\n  authority: PublicKey,\n  programID: PublicKey = QUARRY_ADDRESSES.MintWrapper\n): Promise<[PublicKey, number]> => {\n  return await PublicKey.findProgramAddress(\n    [\n      Buffer.from(utils.bytes.utf8.encode(\"MintWrapperMinter\")),\n      wrapper.toBytes(),\n      authority.toBytes(),\n    ],\n    programID\n  );\n};\n"]}