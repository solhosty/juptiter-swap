"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.QuarryRegistryErrors = exports.QuarryRegistryJSON = exports.AnchorQuarryRegistryIDL = void 0;
const anchor_contrib_1 = require("@saberhq/anchor-contrib");
exports.AnchorQuarryRegistryIDL = {
    version: "5.0.2",
    name: "quarry_registry",
    instructions: [
        {
            name: "newRegistry",
            accounts: [
                {
                    name: "rewarder",
                    isMut: false,
                    isSigner: false,
                },
                {
                    name: "registry",
                    isMut: true,
                    isSigner: false,
                    pda: {
                        seeds: [
                            {
                                kind: "const",
                                type: "string",
                                value: "AnchorQuarryRegistry",
                            },
                            {
                                kind: "account",
                                type: "publicKey",
                                account: "Rewarder",
                                path: "rewarder",
                            },
                        ],
                    },
                },
                {
                    name: "payer",
                    isMut: true,
                    isSigner: true,
                },
                {
                    name: "systemProgram",
                    isMut: false,
                    isSigner: false,
                },
            ],
            args: [
                {
                    name: "maxQuarries",
                    type: "u16",
                },
                {
                    name: "bump",
                    type: "u8",
                },
            ],
        },
        {
            name: "syncQuarry",
            accounts: [
                {
                    name: "quarry",
                    isMut: false,
                    isSigner: false,
                },
                {
                    name: "registry",
                    isMut: true,
                    isSigner: false,
                },
            ],
            args: [],
        },
    ],
    accounts: [
        {
            name: "registry",
            type: {
                kind: "struct",
                fields: [
                    {
                        name: "bump",
                        type: "u8",
                    },
                    {
                        name: "rewarder",
                        type: "publicKey",
                    },
                    {
                        name: "tokens",
                        type: {
                            vec: "publicKey",
                        },
                    },
                ],
            },
        },
    ],
};
exports.QuarryRegistryJSON = {
    version: "5.0.2",
    name: "quarry_registry",
    instructions: [
        {
            name: "newRegistry",
            accounts: [
                {
                    name: "rewarder",
                    isMut: false,
                    isSigner: false,
                },
                {
                    name: "registry",
                    isMut: true,
                    isSigner: false,
                    pda: {
                        seeds: [
                            {
                                kind: "const",
                                type: "string",
                                value: "QuarryRegistry",
                            },
                            {
                                kind: "account",
                                type: "publicKey",
                                account: "Rewarder",
                                path: "rewarder",
                            },
                        ],
                    },
                },
                {
                    name: "payer",
                    isMut: true,
                    isSigner: true,
                },
                {
                    name: "systemProgram",
                    isMut: false,
                    isSigner: false,
                },
            ],
            args: [
                {
                    name: "maxQuarries",
                    type: "u16",
                },
                {
                    name: "bump",
                    type: "u8",
                },
            ],
        },
        {
            name: "syncQuarry",
            accounts: [
                {
                    name: "quarry",
                    isMut: false,
                    isSigner: false,
                },
                {
                    name: "registry",
                    isMut: true,
                    isSigner: false,
                },
            ],
            args: [],
        },
    ],
    accounts: [
        {
            name: "Registry",
            type: {
                kind: "struct",
                fields: [
                    {
                        name: "bump",
                        type: "u8",
                    },
                    {
                        name: "rewarder",
                        type: "publicKey",
                    },
                    {
                        name: "tokens",
                        type: {
                            vec: "publicKey",
                        },
                    },
                ],
            },
        },
    ],
};
exports.QuarryRegistryErrors = (0, anchor_contrib_1.generateErrorMap)(exports.QuarryRegistryJSON);
//# sourceMappingURL=quarry_registry.js.map