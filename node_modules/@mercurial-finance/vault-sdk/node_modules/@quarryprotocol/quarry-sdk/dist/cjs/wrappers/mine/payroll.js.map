{"version":3,"file":"payroll.js","sourceRoot":"","sources":["../../../../src/wrappers/mine/payroll.ts"],"names":[],"mappings":";;;;AAAA,sDAA+C;AAC/C,0DAAuB;AAEV,QAAA,IAAI,GAAG,IAAI,eAAE,CAAC,CAAC,CAAC,CAAC;AACjB,QAAA,QAAQ,GAAG,IAAI,eAAE,CAAC,EAAE,CAAC,CAAC;AAEtB,QAAA,UAAU,GAAG,IAAI,eAAE,CAAC,qBAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;AAExC,QAAA,gBAAgB,GAAG,IAAI,eAAE,CAAC,GAAG,GAAG,KAAM,CAAC,CAAC;AAErD,MAAa,OAAO;IAClB,YACW,QAAY,EACZ,gBAAoB,EACpB,iBAAqB,EACrB,qBAAyB,EACzB,oBAAwB;QAJxB,aAAQ,GAAR,QAAQ,CAAI;QACZ,qBAAgB,GAAhB,gBAAgB,CAAI;QACpB,sBAAiB,GAAjB,iBAAiB,CAAI;QACrB,0BAAqB,GAArB,qBAAqB,CAAI;QACzB,yBAAoB,GAApB,oBAAoB,CAAI;IAChC,CAAC;IAEJ;;;;OAIG;IACH,uBAAuB,CAAC,SAAa;QACnC,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,EAAE;YACtC,OAAO,IAAI,CAAC,qBAAqB,CAAC;SACnC;QAED,MAAM,yBAAyB,GAAG,eAAE,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnE,MAAM,UAAU,GAAG,eAAE,CAAC,GAAG,CACvB,YAAI,EACJ,yBAAyB,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CACrD,CAAC;QACF,MAAM,MAAM,GAAG,UAAU;aACtB,GAAG,CAAC,kBAAU,CAAC;aACf,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;aAC3B,GAAG,CAAC,wBAAgB,CAAC;aACrB,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAChD,CAAC;IAED;;;;;;;OAOG;IACH,sBAAsB,CACpB,SAAa,EACb,eAAmB,EACnB,mBAAuB,EACvB,aAAiB;QAEjB,MAAM,aAAa,GACjB,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACnE,MAAM,aAAa,GAAG,eAAe,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,kBAAU,CAAC,CAAC;QACzE,OAAO,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC1C,CAAC;CACF;AAnDD,0BAmDC","sourcesContent":["import { MAX_U64 } from \"@saberhq/token-utils\";\nimport BN from \"bn.js\";\n\nexport const ZERO = new BN(0);\nexport const BASE_TEN = new BN(10);\n\nexport const MAX_U64_BN = new BN(MAX_U64.toString());\n\nexport const SECONDS_PER_YEAR = new BN(365 * 86_400);\n\nexport class Payroll {\n  constructor(\n    readonly famineTs: BN,\n    readonly lastCheckpointTs: BN,\n    readonly annualRewardsRate: BN,\n    readonly rewardsPerTokenStored: BN,\n    readonly totalTokensDeposited: BN\n  ) {}\n\n  /**\n   * Calculates the amount of tokens that this user can receive.\n   * @param currentTs\n   * @returns\n   */\n  calculateRewardPerToken(currentTs: BN): BN {\n    if (this.totalTokensDeposited.isZero()) {\n      return this.rewardsPerTokenStored;\n    }\n\n    const lastTimeRewardsApplicable = BN.min(currentTs, this.famineTs);\n    const timeWorked = BN.max(\n      ZERO,\n      lastTimeRewardsApplicable.sub(this.lastCheckpointTs)\n    );\n    const reward = timeWorked\n      .mul(MAX_U64_BN)\n      .mul(this.annualRewardsRate)\n      .div(SECONDS_PER_YEAR)\n      .div(this.totalTokensDeposited);\n    return this.rewardsPerTokenStored.add(reward);\n  }\n\n  /**\n   * Calculates the amount of tokens that this user can claim.\n   * @param currentTs\n   * @param tokensDeposited\n   * @param rewardsPerTokenPaid\n   * @param rewardsEarned\n   * @returns\n   */\n  calculateRewardsEarned(\n    currentTs: BN,\n    tokensDeposited: BN,\n    rewardsPerTokenPaid: BN,\n    rewardsEarned: BN\n  ): BN {\n    const netNewRewards =\n      this.calculateRewardPerToken(currentTs).sub(rewardsPerTokenPaid);\n    const earnedRewards = tokensDeposited.mul(netNewRewards).div(MAX_U64_BN);\n    return earnedRewards.add(rewardsEarned);\n  }\n}\n"]}