import { PublicKey } from "@solana/web3.js";
import type { MineProgram, MineTypes, MintWrapperProgram, MintWrapperTypes, QuarryMergeMineProgram, QuarryMergeMineTypes, QuarryOperatorProgram, QuarryOperatorTypes } from "./programs";
import type { RedeemerProgram, RedeemerTypes } from "./programs/redeemer";
import type { RegistryProgram, RegistryTypes } from "./programs/registry";
/**
 * Types of all programs.
 */
export interface Programs {
    MergeMine: QuarryMergeMineProgram;
    Mine: MineProgram;
    MintWrapper: MintWrapperProgram;
    Operator: QuarryOperatorProgram;
    Redeemer: RedeemerProgram;
    Registry: RegistryProgram;
}
/**
 * Quarry program addresses.
 */
export declare const QUARRY_ADDRESSES: {
    MergeMine: PublicKey;
    Mine: PublicKey;
    MintWrapper: PublicKey;
    Operator: PublicKey;
    Redeemer: PublicKey;
    Registry: PublicKey;
};
/**
 * Quarry program IDLs.
 */
export declare const QUARRY_IDLS: {
    MergeMine: import("./programs").QuarryMergeMineIDL;
    Mine: import("./programs").QuarryMineIDL;
    MintWrapper: import("./programs").QuarryMintWrapperIDL;
    Operator: import("./programs").QuarryOperatorIDL;
    Redeemer: import("./programs").QuarryRedeemerIDL;
    Registry: import("./programs").QuarryRegistryIDL;
};
/**
 * Quarry program IDLs.
 */
export declare const QUARRY_CODERS: {
    MergeMine: import("@saberhq/anchor-contrib").SuperCoder<QuarryMergeMineTypes>;
    Mine: import("@saberhq/anchor-contrib").SuperCoder<MineTypes>;
    MintWrapper: import("@saberhq/anchor-contrib").SuperCoder<MintWrapperTypes>;
    Operator: import("@saberhq/anchor-contrib").SuperCoder<QuarryOperatorTypes>;
    Redeemer: import("@saberhq/anchor-contrib").SuperCoder<RedeemerTypes>;
    Registry: import("@saberhq/anchor-contrib").SuperCoder<RegistryTypes>;
};
/**
 * Recipient of protocol fees.
 */
export declare const QUARRY_FEE_TO: PublicKey;
/**
 * Sets the protocol fees.
 */
export declare const QUARRY_FEE_SETTER: PublicKey;
//# sourceMappingURL=constants.d.ts.map