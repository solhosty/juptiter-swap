import type { Provider } from "@saberhq/solana-contrib";
import { TransactionEnvelope } from "@saberhq/solana-contrib";
import type { PublicKey } from "@solana/web3.js";
import type { RegistryProgram } from "../../programs";
import type { QuarrySDK } from "../../sdk";
export declare class QuarryRegistry {
    readonly sdk: QuarrySDK;
    readonly program: RegistryProgram;
    constructor(sdk: QuarrySDK);
    get provider(): Provider;
    /**
     * Creates a new Registry.
     * @returns
     */
    newRegistry({ numQuarries, rewarderKey, payer, }: {
        numQuarries: number;
        rewarderKey: PublicKey;
        payer?: PublicKey;
    }): Promise<{
        tx: TransactionEnvelope;
        registry: PublicKey;
    }>;
    syncQuarry({ tokenMint, rewarderKey, }: {
        tokenMint: PublicKey;
        rewarderKey: PublicKey;
    }): Promise<TransactionEnvelope>;
}
//# sourceMappingURL=registry.d.ts.map