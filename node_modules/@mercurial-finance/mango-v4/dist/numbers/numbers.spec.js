"use strict"; function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _chunk772SHZWXjs = require('../chunk-772SHZWX.js');


var _chunkS3PQ6OXSjs = require('../chunk-S3PQ6OXS.js');
require('../chunk-JC4IRQUL.js');

// ts/client/src/numbers/numbers.spec.ts
var _bnjs = require('bn.js'); var _bnjs2 = _interopRequireDefault(_bnjs);
var _chai = require('chai');
describe("Math", () => {
  it("js number to BN and I80F48", () => {
    _chai.expect.call(void 0, function() {
      new (0, _bnjs2.default)(9007199254740991);
    }).to.not.throw("Assertion failed");
    _chai.expect.call(void 0, function() {
      new (0, _bnjs2.default)(9007199254740992);
    }).to.throw("Assertion failed");
    _chai.expect.call(void 0, function() {
      _chunk772SHZWXjs.U64_MAX_BN.toNumber();
    }).to.throw("Number can only safely store up to 53 bits");
    _chai.expect.call(void 0, 
      _chunkS3PQ6OXSjs.I80F48.fromString("604462909807314587353087.999999999999996").toNumber().toString()
    ).equals("6.044629098073146e+23");
    _chai.expect.call(void 0, new (0, _chunkS3PQ6OXSjs.I80F48)(new (0, _bnjs2.default)(10)).toNumber()).not.equals(10);
    _chai.expect.call(void 0, _chunkS3PQ6OXSjs.I80F48.fromI64(new (0, _bnjs2.default)(10)).toNumber()).equals(10);
    _chai.expect.call(void 0, new (0, _bnjs2.default)(1.5).toNumber()).equals(1);
  });
});
//# sourceMappingURL=numbers.spec.js.map