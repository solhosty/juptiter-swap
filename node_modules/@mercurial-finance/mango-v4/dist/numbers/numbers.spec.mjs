import {
  U64_MAX_BN
} from "../chunk-O3IXUKHU.mjs";
import {
  I80F48
} from "../chunk-62VGMIX5.mjs";
import "../chunk-5VRACIDE.mjs";

// ts/client/src/numbers/numbers.spec.ts
import BN from "bn.js";
import { expect } from "chai";
describe("Math", () => {
  it("js number to BN and I80F48", () => {
    expect(function() {
      new BN(9007199254740991);
    }).to.not.throw("Assertion failed");
    expect(function() {
      new BN(9007199254740992);
    }).to.throw("Assertion failed");
    expect(function() {
      U64_MAX_BN.toNumber();
    }).to.throw("Number can only safely store up to 53 bits");
    expect(
      I80F48.fromString("604462909807314587353087.999999999999996").toNumber().toString()
    ).equals("6.044629098073146e+23");
    expect(new I80F48(new BN(10)).toNumber()).not.equals(10);
    expect(I80F48.fromI64(new BN(10)).toNumber()).equals(10);
    expect(new BN(1.5).toNumber()).equals(1);
  });
});
//# sourceMappingURL=numbers.spec.mjs.map