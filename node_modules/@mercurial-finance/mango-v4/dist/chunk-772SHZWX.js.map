{"version":3,"sources":["../ts/client/src/utils.ts","../ts/client/src/accounts/bank.ts"],"names":["PublicKey"],"mappings":"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","sourcesContent":["import { AnchorProvider } from '@project-serum/anchor';\nimport {\n  ASSOCIATED_TOKEN_PROGRAM_ID,\n  TOKEN_PROGRAM_ID,\n} from '@solana/spl-token';\nimport {\n  AddressLookupTableAccount,\n  MessageV0,\n  PublicKey,\n  Signer,\n  SystemProgram,\n  TransactionInstruction,\n  VersionedTransaction,\n} from '@solana/web3.js';\nimport BN from 'bn.js';\nimport { QUOTE_DECIMALS } from './accounts/bank';\nimport { I80F48 } from './numbers/I80F48';\n\n///\n/// numeric helpers\n///\nexport const U64_MAX_BN = new BN('18446744073709551615');\nexport const I64_MAX_BN = new BN('9223372036854775807').toTwos(64);\n\nexport function toNativeI80F48ForQuote(uiAmount: number): I80F48 {\n  return I80F48.fromNumber(uiAmount * Math.pow(10, 6));\n}\n\nexport function toNativeI80F48(uiAmount: number, decimals: number): I80F48 {\n  return I80F48.fromNumber(uiAmount * Math.pow(10, decimals));\n}\n\nexport function toNative(uiAmount: number, decimals: number): BN {\n  return new BN((uiAmount * Math.pow(10, decimals)).toFixed(0));\n}\n\nexport function toUiDecimals(\n  nativeAmount: BN | I80F48 | number,\n  decimals: number,\n): number {\n  // TODO: remove BN and upgrade to bigint https://github.com/solana-labs/solana/issues/27440\n  if (nativeAmount instanceof BN) {\n    nativeAmount = I80F48.fromU64(nativeAmount);\n  }\n  if (nativeAmount instanceof I80F48) {\n    return nativeAmount\n      .div(I80F48.fromNumber(Math.pow(10, decimals)))\n      .toNumber();\n  }\n  return nativeAmount / Math.pow(10, decimals);\n}\n\nexport function toUiDecimalsForQuote(\n  nativeAmount: BN | I80F48 | number,\n): number {\n  return toUiDecimals(nativeAmount, QUOTE_DECIMALS);\n}\n\nexport function toUiI80F48(nativeAmount: I80F48, decimals: number): I80F48 {\n  return nativeAmount.div(I80F48.fromNumber(Math.pow(10, decimals)));\n}\n\n///\n/// web3js extensions\n///\n\n/**\n * Get the address of the associated token account for a given mint and owner\n *\n * @param mint                     Token mint account\n * @param owner                    Owner of the new account\n * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n * @param programId                SPL Token program account\n * @param associatedTokenProgramId SPL Associated Token program account\n *\n * @return Address of the associated token account\n */\nexport async function getAssociatedTokenAddress(\n  mint: PublicKey,\n  owner: PublicKey,\n  allowOwnerOffCurve = false,\n  programId = TOKEN_PROGRAM_ID,\n  associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID,\n): Promise<PublicKey> {\n  if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n    throw new Error('TokenOwnerOffCurve!');\n\n  const [address] = await PublicKey.findProgramAddress(\n    [owner.toBuffer(), programId.toBuffer(), mint.toBuffer()],\n    associatedTokenProgramId,\n  );\n\n  return address;\n}\n\nexport async function createAssociatedTokenAccountIdempotentInstruction(\n  payer: PublicKey,\n  owner: PublicKey,\n  mint: PublicKey,\n): Promise<TransactionInstruction> {\n  const account = await getAssociatedTokenAddress(mint, owner);\n  return new TransactionInstruction({\n    keys: [\n      { pubkey: payer, isSigner: true, isWritable: true },\n      { pubkey: account, isSigner: false, isWritable: true },\n      { pubkey: owner, isSigner: false, isWritable: false },\n      { pubkey: mint, isSigner: false, isWritable: false },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n      { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    ],\n    programId: ASSOCIATED_TOKEN_PROGRAM_ID,\n    data: Buffer.from([0x1]),\n  });\n}\n\nexport async function buildVersionedTx(\n  provider: AnchorProvider,\n  ix: TransactionInstruction[],\n  additionalSigners: Signer[] = [],\n  alts: AddressLookupTableAccount[] = [],\n): Promise<VersionedTransaction> {\n  const message = MessageV0.compile({\n    payerKey: (provider as AnchorProvider).wallet.publicKey,\n    instructions: ix,\n    recentBlockhash: (await provider.connection.getLatestBlockhash()).blockhash,\n    addressLookupTableAccounts: alts,\n  });\n  const vTx = new VersionedTransaction(message);\n  vTx.sign([\n    ((provider as AnchorProvider).wallet as any).payer as Signer,\n    ...additionalSigners,\n  ]);\n  return vTx;\n}\n\n///\n/// ts extension\n///\n\n// https://stackoverflow.com/questions/70261755/user-defined-type-guard-function-and-type-narrowing-to-more-specific-type/70262876#70262876\nexport declare abstract class As<Tag extends keyof never> {\n  private static readonly $as$: unique symbol;\n  private [As.$as$]: Record<Tag, true>;\n}\n","import { BN } from '@project-serum/anchor';\nimport { utf8 } from '@project-serum/anchor/dist/cjs/utils/bytes';\nimport { PublicKey } from '@solana/web3.js';\nimport { I80F48, I80F48Dto, ZERO_I80F48 } from '../numbers/I80F48';\nimport { As, toUiDecimals } from '../utils';\n\nexport const QUOTE_DECIMALS = 6;\n\nexport type TokenIndex = number & As<'token-index'>;\n\nexport type OracleConfigDto = {\n  confFilter: I80F48Dto;\n  maxStalenessSlots: BN;\n};\n\nexport type OracleConfig = {\n  confFilter: I80F48;\n  maxStalenessSlots: BN;\n};\n\nexport type StablePriceModel = {\n  stablePrice: number;\n  lastUpdateTimestamp: BN;\n  delayPrices: number[];\n  delayAccumulatorPrice: number;\n  delayAccumulatorTime: number;\n  delayIntervalSeconds: number;\n  delayGrowthLimit: number;\n  stableGrowthLimit: number;\n  lastDelayIntervalIndex: number;\n};\n\nexport interface BankForHealth {\n  tokenIndex: TokenIndex;\n  maintAssetWeight: I80F48;\n  initAssetWeight: I80F48;\n  maintLiabWeight: I80F48;\n  initLiabWeight: I80F48;\n  price: I80F48;\n  stablePriceModel: StablePriceModel;\n\n  scaledInitAssetWeight(price: I80F48): I80F48;\n  scaledInitLiabWeight(price: I80F48): I80F48;\n}\n\nexport class Bank implements BankForHealth {\n  public name: string;\n  public oracleConfig: OracleConfig;\n  public depositIndex: I80F48;\n  public borrowIndex: I80F48;\n  public indexedDeposits: I80F48;\n  public indexedBorrows: I80F48;\n  public avgUtilization: I80F48;\n  public adjustmentFactor: I80F48;\n  public maxRate: I80F48;\n  public rate0: I80F48;\n  public rate1: I80F48;\n  public util0: I80F48;\n  public util1: I80F48;\n  public _price: I80F48 | undefined;\n  public _uiPrice: number | undefined;\n  public _oracleLastUpdatedSlot: number | undefined;\n  public collectedFeesNative: I80F48;\n  public loanFeeRate: I80F48;\n  public loanOriginationFeeRate: I80F48;\n  public initAssetWeight: I80F48;\n  public maintAssetWeight: I80F48;\n  public initLiabWeight: I80F48;\n  public maintLiabWeight: I80F48;\n  public liquidationFee: I80F48;\n  public dust: I80F48;\n\n  static from(\n    publicKey: PublicKey,\n    obj: {\n      group: PublicKey;\n      name: number[];\n      mint: PublicKey;\n      vault: PublicKey;\n      oracle: PublicKey;\n      oracleConfig: OracleConfigDto;\n      stablePriceModel: StablePriceModel;\n      depositIndex: I80F48Dto;\n      borrowIndex: I80F48Dto;\n      indexedDeposits: I80F48Dto;\n      indexedBorrows: I80F48Dto;\n      indexLastUpdated: BN;\n      bankRateLastUpdated: BN;\n      avgUtilization: I80F48Dto;\n      adjustmentFactor: I80F48Dto;\n      util0: I80F48Dto;\n      rate0: I80F48Dto;\n      util1: I80F48Dto;\n      rate1: I80F48Dto;\n      maxRate: I80F48Dto;\n      collectedFeesNative: I80F48Dto;\n      loanOriginationFeeRate: I80F48Dto;\n      loanFeeRate: I80F48Dto;\n      maintAssetWeight: I80F48Dto;\n      initAssetWeight: I80F48Dto;\n      maintLiabWeight: I80F48Dto;\n      initLiabWeight: I80F48Dto;\n      liquidationFee: I80F48Dto;\n      dust: I80F48Dto;\n      flashLoanTokenAccountInitial: BN;\n      flashLoanApprovedAmount: BN;\n      tokenIndex: number;\n      mintDecimals: number;\n      bankNum: number;\n      minVaultToDepositsRatio: number;\n      netBorrowLimitWindowSizeTs: BN;\n      lastNetBorrowsWindowStartTs: BN;\n      netBorrowLimitPerWindowQuote: BN;\n      netBorrowsInWindow: BN;\n      borrowWeightScaleStartQuote: number;\n      depositWeightScaleStartQuote: number;\n      reduceOnly: number;\n    },\n  ): Bank {\n    return new Bank(\n      publicKey,\n      obj.group,\n      obj.name,\n      obj.mint,\n      obj.vault,\n      obj.oracle,\n      obj.oracleConfig,\n      obj.stablePriceModel,\n      obj.depositIndex,\n      obj.borrowIndex,\n      obj.indexedDeposits,\n      obj.indexedBorrows,\n      obj.indexLastUpdated,\n      obj.bankRateLastUpdated,\n      obj.avgUtilization,\n      obj.adjustmentFactor,\n      obj.util0,\n      obj.rate0,\n      obj.util1,\n      obj.rate1,\n      obj.maxRate,\n      obj.collectedFeesNative,\n      obj.loanOriginationFeeRate,\n      obj.loanFeeRate,\n      obj.maintAssetWeight,\n      obj.initAssetWeight,\n      obj.maintLiabWeight,\n      obj.initLiabWeight,\n      obj.liquidationFee,\n      obj.dust,\n      obj.flashLoanTokenAccountInitial,\n      obj.flashLoanApprovedAmount,\n      obj.tokenIndex as TokenIndex,\n      obj.mintDecimals,\n      obj.bankNum,\n      obj.minVaultToDepositsRatio,\n      obj.netBorrowLimitWindowSizeTs,\n      obj.lastNetBorrowsWindowStartTs,\n      obj.netBorrowLimitPerWindowQuote,\n      obj.netBorrowsInWindow,\n      obj.borrowWeightScaleStartQuote,\n      obj.depositWeightScaleStartQuote,\n      obj.reduceOnly == 1,\n    );\n  }\n\n  constructor(\n    public publicKey: PublicKey,\n    public group: PublicKey,\n    name: number[],\n    public mint: PublicKey,\n    public vault: PublicKey,\n    public oracle: PublicKey,\n    oracleConfig: OracleConfigDto,\n    public stablePriceModel: StablePriceModel,\n    depositIndex: I80F48Dto,\n    borrowIndex: I80F48Dto,\n    indexedDeposits: I80F48Dto,\n    indexedBorrows: I80F48Dto,\n    public indexLastUpdated: BN,\n    public bankRateLastUpdated: BN,\n    avgUtilization: I80F48Dto,\n    adjustmentFactor: I80F48Dto,\n    util0: I80F48Dto,\n    rate0: I80F48Dto,\n    util1: I80F48Dto,\n    rate1: I80F48Dto,\n    maxRate: I80F48Dto,\n    collectedFeesNative: I80F48Dto,\n    loanOriginationFeeRate: I80F48Dto,\n    loanFeeRate: I80F48Dto,\n    maintAssetWeight: I80F48Dto,\n    initAssetWeight: I80F48Dto,\n    maintLiabWeight: I80F48Dto,\n    initLiabWeight: I80F48Dto,\n    liquidationFee: I80F48Dto,\n    dust: I80F48Dto,\n    flashLoanTokenAccountInitial: BN,\n    flashLoanApprovedAmount: BN,\n    public tokenIndex: TokenIndex,\n    public mintDecimals: number,\n    public bankNum: number,\n    public minVaultToDepositsRatio: number,\n    public netBorrowLimitWindowSizeTs: BN,\n    public lastNetBorrowsWindowStartTs: BN,\n    public netBorrowLimitPerWindowQuote: BN,\n    public netBorrowsInWindow: BN,\n    public borrowWeightScaleStartQuote: number,\n    public depositWeightScaleStartQuote: number,\n    public reduceOnly: boolean,\n  ) {\n    this.name = utf8.decode(new Uint8Array(name)).split('\\x00')[0];\n    this.oracleConfig = {\n      confFilter: I80F48.from(oracleConfig.confFilter),\n      maxStalenessSlots: oracleConfig.maxStalenessSlots,\n    } as OracleConfig;\n    this.depositIndex = I80F48.from(depositIndex);\n    this.borrowIndex = I80F48.from(borrowIndex);\n    this.indexedDeposits = I80F48.from(indexedDeposits);\n    this.indexedBorrows = I80F48.from(indexedBorrows);\n    this.avgUtilization = I80F48.from(avgUtilization);\n    this.adjustmentFactor = I80F48.from(adjustmentFactor);\n    this.maxRate = I80F48.from(maxRate);\n    this.util0 = I80F48.from(util0);\n    this.rate0 = I80F48.from(rate0);\n    this.util1 = I80F48.from(util1);\n    this.rate1 = I80F48.from(rate1);\n    this.collectedFeesNative = I80F48.from(collectedFeesNative);\n    this.loanFeeRate = I80F48.from(loanFeeRate);\n    this.loanOriginationFeeRate = I80F48.from(loanOriginationFeeRate);\n    this.maintAssetWeight = I80F48.from(maintAssetWeight);\n    this.initAssetWeight = I80F48.from(initAssetWeight);\n    this.maintLiabWeight = I80F48.from(maintLiabWeight);\n    this.initLiabWeight = I80F48.from(initLiabWeight);\n    this.liquidationFee = I80F48.from(liquidationFee);\n    this.dust = I80F48.from(dust);\n    this._price = undefined;\n    this._uiPrice = undefined;\n    this._oracleLastUpdatedSlot = undefined;\n  }\n\n  toString(): string {\n    return (\n      'Bank ' +\n      '\\n public key - ' +\n      this.publicKey.toBase58() +\n      '\\n token index - ' +\n      this.tokenIndex +\n      '\\n token name - ' +\n      this.name +\n      '\\n vault - ' +\n      this.vault.toBase58() +\n      '\\n mintDecimals - ' +\n      this.mintDecimals +\n      '\\n oracle - ' +\n      this.oracle.toBase58() +\n      '\\n price - ' +\n      this._price?.toString() +\n      '\\n uiPrice - ' +\n      this._uiPrice +\n      '\\n deposit index - ' +\n      this.depositIndex.toString() +\n      '\\n borrow index - ' +\n      this.borrowIndex.toString() +\n      '\\n indexedDeposits - ' +\n      this.indexedDeposits.toString() +\n      '\\n indexedBorrows - ' +\n      this.indexedBorrows.toString() +\n      '\\n indexLastUpdated - ' +\n      new Date(this.indexLastUpdated.toNumber() * 1000) +\n      '\\n bankRateLastUpdated - ' +\n      new Date(this.bankRateLastUpdated.toNumber() * 1000) +\n      '\\n avgUtilization - ' +\n      this.avgUtilization.toString() +\n      '\\n adjustmentFactor - ' +\n      this.adjustmentFactor.toString() +\n      '\\n maxRate - ' +\n      this.maxRate.toString() +\n      '\\n util0 - ' +\n      this.util0.toString() +\n      '\\n rate0 - ' +\n      this.rate0.toString() +\n      '\\n util1 - ' +\n      this.util1.toString() +\n      '\\n rate1 - ' +\n      this.rate1.toString() +\n      '\\n loanFeeRate - ' +\n      this.loanFeeRate.toString() +\n      '\\n loanOriginationFeeRate - ' +\n      this.loanOriginationFeeRate.toString() +\n      '\\n maintAssetWeight - ' +\n      this.maintAssetWeight.toString() +\n      '\\n initAssetWeight - ' +\n      this.initAssetWeight.toString() +\n      '\\n maintLiabWeight - ' +\n      this.maintLiabWeight.toString() +\n      '\\n initLiabWeight - ' +\n      this.initLiabWeight.toString() +\n      '\\n liquidationFee - ' +\n      this.liquidationFee.toString() +\n      '\\n uiDeposits() - ' +\n      this.uiDeposits() +\n      '\\n uiBorrows() - ' +\n      this.uiBorrows() +\n      '\\n getDepositRate() - ' +\n      this.getDepositRate().toString() +\n      '\\n getBorrowRate() - ' +\n      this.getBorrowRate().toString()\n    );\n  }\n\n  scaledInitAssetWeight(price: I80F48): I80F48 {\n    const depositsQuote = this.nativeDeposits().mul(price);\n    if (\n      this.depositWeightScaleStartQuote >= Number.MAX_SAFE_INTEGER ||\n      depositsQuote.lte(I80F48.fromNumber(this.depositWeightScaleStartQuote))\n    ) {\n      return this.initAssetWeight;\n    }\n    return this.initAssetWeight.mul(\n      I80F48.fromNumber(this.depositWeightScaleStartQuote).div(depositsQuote),\n    );\n  }\n\n  scaledInitLiabWeight(price: I80F48): I80F48 {\n    const borrowsQuote = this.nativeBorrows().mul(price);\n    if (\n      this.borrowWeightScaleStartQuote >= Number.MAX_SAFE_INTEGER ||\n      borrowsQuote.lte(I80F48.fromNumber(this.borrowWeightScaleStartQuote))\n    ) {\n      return this.initLiabWeight;\n    }\n    return this.initLiabWeight.mul(\n      borrowsQuote.div(I80F48.fromNumber(this.borrowWeightScaleStartQuote)),\n    );\n  }\n\n  get price(): I80F48 {\n    if (!this._price) {\n      throw new Error(\n        `Undefined price for bank ${this.publicKey} with tokenIndex ${this.tokenIndex}!`,\n      );\n    }\n    return this._price;\n  }\n\n  get uiPrice(): number {\n    if (!this._uiPrice) {\n      throw new Error(\n        `Undefined uiPrice for bank ${this.publicKey} with tokenIndex ${this.tokenIndex}!`,\n      );\n    }\n    return this._uiPrice;\n  }\n\n  get oracleLastUpdatedSlot(): number {\n    if (!this._oracleLastUpdatedSlot) {\n      throw new Error(\n        `Undefined oracleLastUpdatedSlot for bank ${this.publicKey} with tokenIndex ${this.tokenIndex}!`,\n      );\n    }\n    return this._oracleLastUpdatedSlot;\n  }\n\n  nativeDeposits(): I80F48 {\n    return this.indexedDeposits.mul(this.depositIndex);\n  }\n\n  nativeBorrows(): I80F48 {\n    return this.indexedBorrows.mul(this.borrowIndex);\n  }\n\n  uiDeposits(): number {\n    return toUiDecimals(\n      this.indexedDeposits.mul(this.depositIndex),\n      this.mintDecimals,\n    );\n  }\n\n  uiBorrows(): number {\n    return toUiDecimals(\n      this.indexedBorrows.mul(this.borrowIndex),\n      this.mintDecimals,\n    );\n  }\n\n  /**\n   *\n   * @returns borrow rate, 0 is 0% where 1 is 100%\n   */\n  getBorrowRate(): I80F48 {\n    const totalBorrows = this.nativeBorrows();\n    const totalDeposits = this.nativeDeposits();\n\n    if (totalDeposits.isZero() && totalBorrows.isZero()) {\n      return ZERO_I80F48();\n    }\n    if (totalDeposits.lte(totalBorrows)) {\n      return this.maxRate;\n    }\n\n    const utilization = totalBorrows.div(totalDeposits);\n    if (utilization.gt(this.util1)) {\n      const extraUtil = utilization.sub(this.util1);\n      const slope = this.maxRate\n        .sub(this.rate1)\n        .div(I80F48.fromNumber(1).sub(this.util1));\n      return this.rate1.add(slope.mul(extraUtil));\n    } else if (utilization.gt(this.util0)) {\n      const extraUtil = utilization.sub(this.util0);\n      const slope = this.maxRate\n        .sub(this.rate0)\n        .div(I80F48.fromNumber(1).sub(this.util0));\n      return this.rate0.add(slope.mul(extraUtil));\n    } else {\n      const slope = this.rate0.div(this.util0);\n      return slope.mul(utilization);\n    }\n  }\n\n  /**\n   *\n   * @returns borrow rate percentage\n   */\n  getBorrowRateUi(): number {\n    return this.getBorrowRate().toNumber() * 100;\n  }\n\n  /**\n   *\n   * @returns deposit rate, 0 is 0% where 1 is 100%\n   */\n  getDepositRate(): I80F48 {\n    const borrowRate = this.getBorrowRate();\n    const totalBorrows = this.nativeBorrows();\n    const totalDeposits = this.nativeDeposits();\n\n    if (totalDeposits.isZero() && totalBorrows.isZero()) {\n      return ZERO_I80F48();\n    } else if (totalDeposits.isZero()) {\n      return this.maxRate;\n    }\n\n    const utilization = totalBorrows.div(totalDeposits);\n    return utilization.mul(borrowRate);\n  }\n\n  /**\n   *\n   * @returns deposit rate percentage\n   */\n  getDepositRateUi(): number {\n    return this.getDepositRate().toNumber() * 100;\n  }\n}\n\nexport class MintInfo {\n  static from(\n    publicKey: PublicKey,\n    obj: {\n      group: PublicKey;\n      tokenIndex: number;\n      mint: PublicKey;\n      banks: PublicKey[];\n      vaults: PublicKey[];\n      oracle: PublicKey;\n      registrationTime: BN;\n      groupInsuranceFund: number;\n    },\n  ): MintInfo {\n    return new MintInfo(\n      publicKey,\n      obj.group,\n      obj.tokenIndex as TokenIndex,\n      obj.mint,\n      obj.banks,\n      obj.vaults,\n      obj.oracle,\n      obj.registrationTime,\n      obj.groupInsuranceFund,\n    );\n  }\n\n  constructor(\n    public publicKey: PublicKey,\n    public group: PublicKey,\n    public tokenIndex: TokenIndex,\n    public mint: PublicKey,\n    public banks: PublicKey[],\n    public vaults: PublicKey[],\n    public oracle: PublicKey,\n    public registrationTime: BN,\n    public groupInsuranceFund: number,\n  ) {}\n\n  public firstBank(): PublicKey {\n    return this.banks[0];\n  }\n  public firstVault(): PublicKey {\n    return this.vaults[0];\n  }\n\n  toString(): string {\n    const res =\n      'mint ' +\n      this.mint.toBase58() +\n      '\\n oracle ' +\n      this.oracle.toBase58() +\n      '\\n banks ' +\n      this.banks\n        .filter((pk) => pk.toBase58() !== PublicKey.default.toBase58())\n        .toString() +\n      '\\n vaults ' +\n      this.vaults\n        .filter((pk) => pk.toBase58() !== PublicKey.default.toBase58())\n        .toString();\n    return res;\n  }\n}\n"]}