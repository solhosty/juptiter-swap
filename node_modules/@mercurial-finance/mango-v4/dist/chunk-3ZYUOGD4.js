"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _chunkS3PQ6OXSjs = require('./chunk-S3PQ6OXS.js');

// ts/client/src/accounts/oracle.ts
var _client = require('@pythnetwork/client');
var _web3js = require('@solana/web3.js');
var _sbv2lite = require('@switchboard-xyz/sbv2-lite'); var _sbv2lite2 = _interopRequireDefault(_sbv2lite);
var SBV1_DEVNET_PID = new (0, _web3js.PublicKey)(
  "7azgmy1pFXHikv36q1zZASvFq5vFa39TT9NweVugKKTU"
);
var SBV1_MAINNET_PID = new (0, _web3js.PublicKey)(
  "DtmE9D2CSB4L5D6A15mraeEjrGMm6auWVzgaD8hK2tZM"
);
var sbv2DevnetProgram;
var sbv2MainnetProgram;
var StubOracle = class {
  constructor(publicKey, group, mint, price, lastUpdated) {
    this.publicKey = publicKey;
    this.group = group;
    this.mint = mint;
    this.price = _chunkS3PQ6OXSjs.I80F48.from(price);
    this.lastUpdated = lastUpdated;
  }
  static from(publicKey, obj) {
    return new StubOracle(
      publicKey,
      obj.group,
      obj.mint,
      obj.price,
      obj.lastUpdated
    );
  }
};
function parseSwitchboardOracleV1(accountInfo) {
  const price = accountInfo.data.readDoubleLE(1 + 32 + 4 + 4);
  const lastUpdatedSlot = parseInt(
    accountInfo.data.readBigUInt64LE(1 + 32 + 4 + 4 + 8).toString()
  );
  return { price, lastUpdatedSlot };
}
function parseSwitchboardOracleV2(program, accountInfo) {
  const price = program.decodeLatestAggregatorValue(accountInfo).toNumber();
  const lastUpdatedSlot = program.decodeAggregator(accountInfo).latestConfirmedRound.roundOpenSlot.toNumber();
  if (!price || !lastUpdatedSlot)
    throw new Error("Unable to parse Switchboard Oracle V2");
  return { price, lastUpdatedSlot };
}
async function parseSwitchboardOracle(accountInfo, connection) {
  if (accountInfo.owner.equals(_sbv2lite2.default.devnetPid)) {
    if (!sbv2DevnetProgram) {
      sbv2DevnetProgram = await _sbv2lite2.default.loadDevnet(connection);
    }
    return parseSwitchboardOracleV2(sbv2DevnetProgram, accountInfo);
  }
  if (accountInfo.owner.equals(_sbv2lite2.default.mainnetPid)) {
    if (!sbv2MainnetProgram) {
      sbv2MainnetProgram = await _sbv2lite2.default.loadMainnet(connection);
    }
    return parseSwitchboardOracleV2(sbv2MainnetProgram, accountInfo);
  }
  if (accountInfo.owner.equals(SBV1_DEVNET_PID) || accountInfo.owner.equals(SBV1_MAINNET_PID)) {
    return parseSwitchboardOracleV1(accountInfo);
  }
  throw new Error(`Should not be reached!`);
}
function isSwitchboardOracle(accountInfo) {
  if (accountInfo.owner.equals(SBV1_DEVNET_PID) || accountInfo.owner.equals(SBV1_MAINNET_PID) || accountInfo.owner.equals(_sbv2lite2.default.devnetPid) || accountInfo.owner.equals(_sbv2lite2.default.mainnetPid)) {
    return true;
  }
  return false;
}
function isPythOracle(accountInfo) {
  return accountInfo.data.readUInt32LE(0) === _client.Magic;
}








exports.StubOracle = StubOracle; exports.parseSwitchboardOracleV1 = parseSwitchboardOracleV1; exports.parseSwitchboardOracleV2 = parseSwitchboardOracleV2; exports.parseSwitchboardOracle = parseSwitchboardOracle; exports.isSwitchboardOracle = isSwitchboardOracle; exports.isPythOracle = isPythOracle;
//# sourceMappingURL=chunk-3ZYUOGD4.js.map