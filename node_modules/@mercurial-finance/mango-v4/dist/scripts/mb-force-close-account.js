"use strict"; function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _chunkHFEILVW4js = require('../chunk-HFEILVW4.js');
require('../chunk-A355EMTI.js');
require('../chunk-74ANAXXV.js');
require('../chunk-C3X3GVS5.js');
require('../chunk-UGHO4YHY.js');
require('../chunk-3ZYUOGD4.js');
require('../chunk-ZYSI4CYO.js');


var _chunkS6N5Y2X2js = require('../chunk-S6N5Y2X2.js');
require('../chunk-772SHZWX.js');
require('../chunk-S3PQ6OXS.js');
require('../chunk-WKB2GIFW.js');
require('../chunk-TBVE5N24.js');
require('../chunk-Y7A4QF6J.js');
require('../chunk-JC4IRQUL.js');

// ts/client/src/scripts/mb-force-close-account.ts
var _anchor = require('@project-serum/anchor');
var _web3js = require('@solana/web3.js');
var _fs = require('fs'); var _fs2 = _interopRequireDefault(_fs);
var GROUP_NUM = Number(process.env.GROUP_NUM || 0);
var MANGO_ACCOUNT_PK = process.env.MANGO_ACCOUNT_PK;
var { MB_CLUSTER_URL, MB_PAYER_KEYPAIR, MB_USER_KEYPAIR, MB_USER4_KEYPAIR } = process.env;
async function buildUserClient(userKeypair) {
  const options = _anchor.AnchorProvider.defaultOptions();
  const connection = new (0, _web3js.Connection)(MB_CLUSTER_URL, options);
  const user = _web3js.Keypair.fromSecretKey(
    Buffer.from(JSON.parse(_fs2.default.readFileSync(userKeypair, "utf-8")))
  );
  const userWallet = new (0, _anchor.Wallet)(user);
  const userProvider = new (0, _anchor.AnchorProvider)(connection, userWallet, options);
  const client = await _chunkHFEILVW4js.MangoClient.connect(
    userProvider,
    "mainnet-beta",
    _chunkS6N5Y2X2js.MANGO_V4_ID["mainnet-beta"]
  );
  const admin = _web3js.Keypair.fromSecretKey(
    Buffer.from(JSON.parse(_fs2.default.readFileSync(MB_PAYER_KEYPAIR, "utf-8")))
  );
  console.log(`Admin ${admin.publicKey.toBase58()}`);
  const group = await client.getGroupForCreator(admin.publicKey, GROUP_NUM);
  return [client, group, user];
}
async function forceCloseUserAccount() {
  const result = await buildUserClient(MB_PAYER_KEYPAIR);
  const client = result[0];
  const group = result[1];
  const mangoAccount = await client.getMangoAccount(
    new (0, _web3js.PublicKey)(MANGO_ACCOUNT_PK)
  );
  await client.closeMangoAccount(group, mangoAccount, true);
  process.exit();
}
async function main() {
  await forceCloseUserAccount();
}
main();
//# sourceMappingURL=mb-force-close-account.js.map