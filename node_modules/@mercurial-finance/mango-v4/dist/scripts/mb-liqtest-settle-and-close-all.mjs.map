{"version":3,"sources":["../../ts/client/src/scripts/mb-liqtest-settle-and-close-all.ts"],"sourcesContent":["import { AnchorProvider, Wallet } from '@project-serum/anchor';\nimport { Connection, Keypair } from '@solana/web3.js';\nimport fs from 'fs';\nimport { MangoClient } from '../client';\nimport { MANGO_V4_ID } from '../constants';\n\n//\n// This script tries to withdraw all positive balances for all accounts\n// by MANGO_MAINNET_PAYER_KEYPAIR in the group.\n//\n\nconst GROUP_NUM = Number(process.env.GROUP_NUM || 200);\nconst CLUSTER_URL = process.env.CLUSTER_URL;\nconst MANGO_MAINNET_PAYER_KEYPAIR =\n  process.env.MANGO_MAINNET_PAYER_KEYPAIR || '';\n\nasync function main() {\n  const options = AnchorProvider.defaultOptions();\n  options.commitment = 'processed';\n  options.preflightCommitment = 'finalized';\n  const connection = new Connection(CLUSTER_URL!, options);\n\n  const admin = Keypair.fromSecretKey(\n    Buffer.from(\n      JSON.parse(fs.readFileSync(MANGO_MAINNET_PAYER_KEYPAIR, 'utf-8')),\n    ),\n  );\n  const userWallet = new Wallet(admin);\n  const userProvider = new AnchorProvider(connection, userWallet, options);\n  const client = await MangoClient.connect(\n    userProvider,\n    'mainnet-beta',\n    MANGO_V4_ID['mainnet-beta'],\n    {\n      idsSource: 'get-program-accounts',\n      prioritizationFee: 100,\n      txConfirmationCommitment: 'confirmed',\n    },\n  );\n  console.log(`User ${userWallet.publicKey.toBase58()}`);\n\n  // const groups = await client.getGroupsForCreator(admin.publicKey);\n  // console.log(\n  //   'groups: ',\n  //   groups.map((g) => g.publicKey.toString() + '  ' + g.groupNum.toString()),\n  // );\n\n  const group = await client.getGroupForCreator(admin.publicKey, GROUP_NUM);\n  console.log(group.toString());\n\n  let accounts = await client.getMangoAccountsForOwner(group, admin.publicKey);\n  for (let account of accounts) {\n    for (let serumOrders of account.serum3Active()) {\n      const serumMarket = group.getSerum3MarketByMarketIndex(\n        serumOrders.marketIndex,\n      )!;\n      const serumExternal = serumMarket.serumMarketExternal;\n      console.log(\n        `closing serum orders on: ${account} for market ${serumMarket.name}`,\n      );\n      await client.serum3CancelAllOrders(group, account, serumExternal, 10);\n      await client.serum3SettleFunds(group, account, serumExternal);\n      await client.serum3CloseOpenOrders(group, account, serumExternal);\n    }\n\n    for (let perpPosition of account.perpActive()) {\n      const perpMarket = group.findPerpMarket(perpPosition.marketIndex)!;\n      console.log(\n        `closing perp orders on: ${account} for market ${perpMarket.name}`,\n      );\n      await client.perpCancelAllOrders(\n        group,\n        account,\n        perpMarket.perpMarketIndex,\n        10,\n      );\n    }\n  }\n\n  accounts = await client.getMangoAccountsForOwner(group, admin.publicKey);\n  for (let account of accounts) {\n    // close account\n    try {\n      console.log(`closing account: ${account}`);\n      await client.closeMangoAccount(group, account, true);\n    } catch (error) {\n      console.log(`failed to close ${account.publicKey}: ${error}`);\n    }\n  }\n\n  process.exit();\n}\n\nmain();\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAAS,gBAAgB,cAAc;AACvC,SAAS,YAAY,eAAe;AACpC,OAAO,QAAQ;AASf,IAAM,YAAY,OAAO,QAAQ,IAAI,aAAa,GAAG;AACrD,IAAM,cAAc,QAAQ,IAAI;AAChC,IAAM,8BACJ,QAAQ,IAAI,+BAA+B;AAE7C,eAAe,OAAO;AACpB,QAAM,UAAU,eAAe,eAAe;AAC9C,UAAQ,aAAa;AACrB,UAAQ,sBAAsB;AAC9B,QAAM,aAAa,IAAI,WAAW,aAAc,OAAO;AAEvD,QAAM,QAAQ,QAAQ;AAAA,IACpB,OAAO;AAAA,MACL,KAAK,MAAM,GAAG,aAAa,6BAA6B,OAAO,CAAC;AAAA,IAClE;AAAA,EACF;AACA,QAAM,aAAa,IAAI,OAAO,KAAK;AACnC,QAAM,eAAe,IAAI,eAAe,YAAY,YAAY,OAAO;AACvE,QAAM,SAAS,MAAM,YAAY;AAAA,IAC/B;AAAA,IACA;AAAA,IACA,YAAY,cAAc;AAAA,IAC1B;AAAA,MACE,WAAW;AAAA,MACX,mBAAmB;AAAA,MACnB,0BAA0B;AAAA,IAC5B;AAAA,EACF;AACA,UAAQ,IAAI,QAAQ,WAAW,UAAU,SAAS,GAAG;AAQrD,QAAM,QAAQ,MAAM,OAAO,mBAAmB,MAAM,WAAW,SAAS;AACxE,UAAQ,IAAI,MAAM,SAAS,CAAC;AAE5B,MAAI,WAAW,MAAM,OAAO,yBAAyB,OAAO,MAAM,SAAS;AAC3E,WAAS,WAAW,UAAU;AAC5B,aAAS,eAAe,QAAQ,aAAa,GAAG;AAC9C,YAAM,cAAc,MAAM;AAAA,QACxB,YAAY;AAAA,MACd;AACA,YAAM,gBAAgB,YAAY;AAClC,cAAQ;AAAA,QACN,4BAA4B,sBAAsB,YAAY;AAAA,MAChE;AACA,YAAM,OAAO,sBAAsB,OAAO,SAAS,eAAe,EAAE;AACpE,YAAM,OAAO,kBAAkB,OAAO,SAAS,aAAa;AAC5D,YAAM,OAAO,sBAAsB,OAAO,SAAS,aAAa;AAAA,IAClE;AAEA,aAAS,gBAAgB,QAAQ,WAAW,GAAG;AAC7C,YAAM,aAAa,MAAM,eAAe,aAAa,WAAW;AAChE,cAAQ;AAAA,QACN,2BAA2B,sBAAsB,WAAW;AAAA,MAC9D;AACA,YAAM,OAAO;AAAA,QACX;AAAA,QACA;AAAA,QACA,WAAW;AAAA,QACX;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,aAAW,MAAM,OAAO,yBAAyB,OAAO,MAAM,SAAS;AACvE,WAAS,WAAW,UAAU;AAE5B,QAAI;AACF,cAAQ,IAAI,oBAAoB,SAAS;AACzC,YAAM,OAAO,kBAAkB,OAAO,SAAS,IAAI;AAAA,IACrD,SAAS,OAAP;AACA,cAAQ,IAAI,mBAAmB,QAAQ,cAAc,OAAO;AAAA,IAC9D;AAAA,EACF;AAEA,UAAQ,KAAK;AACf;AAEA,KAAK;","names":[]}