{"version":3,"sources":["../../../ts/client/src/scripts/mm/log-perp-ob.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAAS,gBAAgB,cAAc;AACvC,SAAkB,YAAY,SAAS,iBAAiB;AAKxD,IAAM,UACH,QAAQ,IAAI,oBAAgC;AAC/C,IAAM,cACJ,QAAQ,IAAI,wBAAwB,QAAQ,IAAI;AAClD,IAAM,mBAAmB,QAAQ,IAAI,oBAAoB;AAEzD,eAAe,OAAO;AACpB,QAAM,UAAU,eAAe,eAAe;AAC9C,QAAM,aAAa,IAAI,WAAW,aAAc,OAAO;AAGvD,QAAM,OAAO,IAAI,QAAQ;AACzB,QAAM,aAAa,IAAI,OAAO,IAAI;AAClC,QAAM,eAAe,IAAI,eAAe,YAAY,YAAY,OAAO;AACvE,QAAM,SAAS,MAAM,YAAY;AAAA,IAC/B;AAAA,IACA;AAAA,IACA,YAAY,OAAO;AAAA,IACnB;AAAA,MACE,WAAW;AAAA,IACb;AAAA,EACF;AAGA,MAAI,eAAe,MAAM,OAAO;AAAA,IAC9B,IAAI,UAAU,gBAAgB;AAAA,EAChC;AACA,QAAM,aAAa,OAAO,MAAM;AAGhC,QAAM,QAAQ,MAAM,OAAO,SAAS,aAAa,KAAK;AACtD,QAAM,MAAM,UAAU,MAAM;AAG5B,SAAO,MAAM;AACX,UAAM,IAAI,QAAQ,CAAC,MAAM,WAAW,GAAG,GAAI,CAAC;AAC5C,YAAQ,MAAM;AACd,UAAM,MAAM,UAAU,MAAM;AAC5B,UAAM,gBAAgB,MAAM,oBAAoB,UAAU;AAC1D,YAAQ,IAAI,wBAAwB,cAAc,SAAS;AAC3D,YAAQ,IAAI,EAAE;AACd,YAAQ,IAAI,MAAM,cAAc,MAAM,MAAM,CAAC;AAC7C,YAAQ,IAAI,EAAE;AAEd,UAAM,iBAAiB,MAAM,oBAAoB,WAAW;AAC5D,YAAQ,IAAI,wBAAwB,eAAe,SAAS;AAC5D,YAAQ,IAAI,EAAE;AACd,YAAQ,IAAI,MAAM,eAAe,MAAM,MAAM,CAAC;AAC9C,YAAQ,IAAI,EAAE;AAAA,EAChB;AACF;AAEA,KAAK","sourcesContent":["import { AnchorProvider, Wallet } from '@project-serum/anchor';\nimport { Cluster, Connection, Keypair, PublicKey } from '@solana/web3.js';\nimport { MangoClient } from '../../client';\nimport { MANGO_V4_ID } from '../../constants';\n\n// For easy switching between mainnet and devnet, default is mainnet\nconst CLUSTER: Cluster =\n  (process.env.CLUSTER_OVERRIDE as Cluster) || 'mainnet-beta';\nconst CLUSTER_URL =\n  process.env.CLUSTER_URL_OVERRIDE || process.env.MB_CLUSTER_URL;\nconst MANGO_ACCOUNT_PK = process.env.MANGO_ACCOUNT_PK || '';\n\nasync function main() {\n  const options = AnchorProvider.defaultOptions();\n  const connection = new Connection(CLUSTER_URL!, options);\n\n  // Throwaway keypair\n  const user = new Keypair();\n  const userWallet = new Wallet(user);\n  const userProvider = new AnchorProvider(connection, userWallet, options);\n  const client = await MangoClient.connect(\n    userProvider,\n    CLUSTER,\n    MANGO_V4_ID[CLUSTER],\n    {\n      idsSource: 'get-program-accounts',\n    },\n  );\n\n  // Load mango account\n  let mangoAccount = await client.getMangoAccount(\n    new PublicKey(MANGO_ACCOUNT_PK),\n  );\n  await mangoAccount.reload(client);\n\n  // Load group for mango account\n  const group = await client.getGroup(mangoAccount.group);\n  await group.reloadAll(client);\n\n  // Log OB\n  while (true) {\n    await new Promise((r) => setTimeout(r, 2000));\n    console.clear();\n    await group.reloadAll(client);\n    const btcPerpMarket = group.getPerpMarketByName('BTC-PERP');\n    console.log(`  perpMarket.uiPrice ${btcPerpMarket.uiPrice}`);\n    console.log(``);\n    console.log(await btcPerpMarket.logOb(client));\n    console.log(``);\n\n    const mngoPerpMarket = group.getPerpMarketByName('MNGO-PERP');\n    console.log(`  perpMarket.uiPrice ${mngoPerpMarket.uiPrice}`);\n    console.log(``);\n    console.log(await mngoPerpMarket.logOb(client));\n    console.log(``);\n  }\n}\n\nmain();\n"]}