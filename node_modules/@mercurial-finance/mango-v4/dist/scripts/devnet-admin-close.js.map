{"version":3,"sources":["../../ts/client/src/scripts/devnet-admin-close.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAAS,gBAAgB,cAAc;AACvC,SAAS,YAAY,SAAS,iBAAiB;AAC/C,OAAO,QAAQ;AAQf,IAAM,YAAY,OAAO,QAAQ,IAAI,aAAa,CAAC;AAE5C,IAAM,eAAe,oBAAI,IAAI;AAAA,EAClC,CAAC,QAAQ,8CAA8C;AAAA;AACzD,CAAC;AAED,eAAe,OAAO;AACpB,QAAM,UAAU,eAAe,eAAe;AAC9C,QAAM,aAAa,IAAI;AAAA,IACrB;AAAA,IACA;AAAA,EACF;AAEA,QAAM,QAAQ,QAAQ;AAAA,IACpB,OAAO;AAAA,MACL,KAAK,MAAM,GAAG,aAAa,QAAQ,IAAI,eAAgB,OAAO,CAAC;AAAA,IACjE;AAAA,EACF;AACA,QAAM,cAAc,IAAI,OAAO,KAAK;AACpC,UAAQ,IAAI,SAAS,YAAY,UAAU,SAAS,GAAG;AACvD,QAAM,gBAAgB,IAAI,eAAe,YAAY,aAAa,OAAO;AACzE,QAAM,SAAS,MAAM,YAAY;AAAA,IAC/B;AAAA,IACA;AAAA,IACA,YAAY,QAAQ;AAAA,IACpB;AAAA,MACE,WAAW;AAAA,IACb;AAAA,EACF;AAEA,QAAM,QAAQ,MAAM,OAAO,mBAAmB,MAAM,WAAW,SAAS;AACxE,UAAQ,IAAI,SAAS,MAAM,WAAW;AAEtC,MAAI;AAGJ,QAAM,iBAAiB,IAAI,UAAU,aAAa,IAAI,MAAM,CAAE;AAE9D,QAAM,oBACJ,MAAM,OAAO,cAAc,OAAO,cAAc,GAChD,CAAC;AACH,QAAM,MAAM,OAAO,gBAAgB,OAAO,iBAAiB,SAAS;AACpE,UAAQ;AAAA,IACN,+DAA+D;AAAA,EACjE;AAGA,QAAM,gBAAgB;AAGtB,aAAW,UAAU,MAAM,2BAA2B,OAAO,GAAG;AAC9D,UAAM,MAAM,OAAO;AAAA,MACjB;AAAA,MACA,OAAO;AAAA,IACT;AACA,YAAQ;AAAA,MACN,6BAA6B,OAAO,4CAA4C;AAAA,IAClF;AAAA,EACF;AAGA,aAAW,UAAU,MAAM,4BAA4B,OAAO,GAAG;AAC/D,UAAM,MAAM,OAAO,gBAAgB,OAAO,OAAO,eAAe;AAChE,YAAQ;AAAA,MACN,sBAAsB,OAAO,4CAA4C;AAAA,IAC3E;AAAA,EACF;AAIA,QAAM,MAAM,OAAO,WAAW,KAAK;AACnC,UAAQ;AAAA,IACN,oDAAoD;AAAA,EACtD;AAEA,UAAQ,KAAK;AACf;AAEA,KAAK","sourcesContent":["import { AnchorProvider, Wallet } from '@project-serum/anchor';\nimport { Connection, Keypair, PublicKey } from '@solana/web3.js';\nimport fs from 'fs';\nimport { MangoClient } from '../client';\nimport { MANGO_V4_ID } from '../constants';\n\n//\n// example script to close accounts - banks, markets, group etc. which require admin to be the signer\n//\n\nconst GROUP_NUM = Number(process.env.GROUP_NUM || 0);\n\nexport const DEVNET_MINTS = new Map([\n  ['USDC', '8FRFC6MoGGkMFQwngccyu69VnYbzykGeez7ignHVAFSN'], // use devnet usdc\n]);\n\nasync function main() {\n  const options = AnchorProvider.defaultOptions();\n  const connection = new Connection(\n    'https://mango.devnet.rpcpool.com',\n    options,\n  );\n\n  const admin = Keypair.fromSecretKey(\n    Buffer.from(\n      JSON.parse(fs.readFileSync(process.env.ADMIN_KEYPAIR!, 'utf-8')),\n    ),\n  );\n  const adminWallet = new Wallet(admin);\n  console.log(`Admin ${adminWallet.publicKey.toBase58()}`);\n  const adminProvider = new AnchorProvider(connection, adminWallet, options);\n  const client = await MangoClient.connect(\n    adminProvider,\n    'devnet',\n    MANGO_V4_ID['devnet'],\n    {\n      idsSource: 'get-program-accounts',\n    },\n  );\n\n  const group = await client.getGroupForCreator(admin.publicKey, GROUP_NUM);\n  console.log(`Group ${group.publicKey}`);\n\n  let sig;\n\n  // close stub oracle\n  const usdcDevnetMint = new PublicKey(DEVNET_MINTS.get('USDC')!);\n\n  const usdcDevnetOracle = (\n    await client.getStubOracle(group, usdcDevnetMint)\n  )[0];\n  sig = await client.stubOracleClose(group, usdcDevnetOracle.publicKey);\n  console.log(\n    `Closed USDC stub oracle, sig https://explorer.solana.com/tx/${sig}?cluster=devnet`,\n  );\n\n  // close all bank\n  group.consoleLogBanks();\n\n  // deregister all serum markets\n  for (const market of group.serum3MarketsMapByExternal.values()) {\n    sig = await client.serum3deregisterMarket(\n      group,\n      market.serumMarketExternal,\n    );\n    console.log(\n      `Deregistered serum market ${market.name}, sig https://explorer.solana.com/tx/${sig}?cluster=devnet`,\n    );\n  }\n\n  // close all perp markets\n  for (const market of group.perpMarketsMapByMarketIndex.values()) {\n    sig = await client.perpCloseMarket(group, market.perpMarketIndex);\n    console.log(\n      `Closed perp market ${market.name}, sig https://explorer.solana.com/tx/${sig}?cluster=devnet`,\n    );\n  }\n\n  // finally, close the group\n\n  sig = await client.groupClose(group);\n  console.log(\n    `Closed group, sig https://explorer.solana.com/tx/${sig}?cluster=devnet`,\n  );\n\n  process.exit();\n}\n\nmain();\n"]}