{"version":3,"sources":["../../ts/client/src/scripts/mb-force-close-account.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAAS,gBAAgB,cAAc;AACvC,SAAS,YAAY,SAAS,iBAAiB;AAC/C,OAAO,QAAQ;AAKf,IAAM,YAAY,OAAO,QAAQ,IAAI,aAAa,CAAC;AACnD,IAAM,mBAAmB,QAAQ,IAAI;AACrC,IAAM,EAAE,gBAAgB,kBAAkB,iBAAiB,iBAAiB,IAC1E,QAAQ;AAEV,eAAe,gBACb,aACwC;AACxC,QAAM,UAAU,eAAe,eAAe;AAC9C,QAAM,aAAa,IAAI,WAAW,gBAAiB,OAAO;AAE1D,QAAM,OAAO,QAAQ;AAAA,IACnB,OAAO,KAAK,KAAK,MAAM,GAAG,aAAa,aAAa,OAAO,CAAC,CAAC;AAAA,EAC/D;AACA,QAAM,aAAa,IAAI,OAAO,IAAI;AAClC,QAAM,eAAe,IAAI,eAAe,YAAY,YAAY,OAAO;AAEvE,QAAM,SAAS,MAAM,YAAY;AAAA,IAC/B;AAAA,IACA;AAAA,IACA,YAAY,cAAc;AAAA,EAC5B;AAEA,QAAM,QAAQ,QAAQ;AAAA,IACpB,OAAO,KAAK,KAAK,MAAM,GAAG,aAAa,kBAAmB,OAAO,CAAC,CAAC;AAAA,EACrE;AACA,UAAQ,IAAI,SAAS,MAAM,UAAU,SAAS,GAAG;AACjD,QAAM,QAAQ,MAAM,OAAO,mBAAmB,MAAM,WAAW,SAAS;AACxE,SAAO,CAAC,QAAQ,OAAO,IAAI;AAC7B;AAEA,eAAe,wBAAwB;AACrC,QAAM,SAAS,MAAM,gBAAgB,gBAAiB;AACtD,QAAM,SAAS,OAAO,CAAC;AACvB,QAAM,QAAQ,OAAO,CAAC;AACtB,QAAM,eAAe,MAAM,OAAO;AAAA,IAChC,IAAI,UAAU,gBAAiB;AAAA,EACjC;AACA,QAAM,OAAO,kBAAkB,OAAO,cAAc,IAAI;AACxD,UAAQ,KAAK;AACf;AAEA,eAAe,OAAO;AACpB,QAAM,sBAAsB;AAC9B;AAEA,KAAK","sourcesContent":["import { AnchorProvider, Wallet } from '@project-serum/anchor';\nimport { Connection, Keypair, PublicKey } from '@solana/web3.js';\nimport fs from 'fs';\nimport { Group } from '../accounts/group';\nimport { MangoClient } from '../client';\nimport { MANGO_V4_ID } from '../constants';\n\nconst GROUP_NUM = Number(process.env.GROUP_NUM || 0);\nconst MANGO_ACCOUNT_PK = process.env.MANGO_ACCOUNT_PK;\nconst { MB_CLUSTER_URL, MB_PAYER_KEYPAIR, MB_USER_KEYPAIR, MB_USER4_KEYPAIR } =\n  process.env;\n\nasync function buildUserClient(\n  userKeypair: string,\n): Promise<[MangoClient, Group, Keypair]> {\n  const options = AnchorProvider.defaultOptions();\n  const connection = new Connection(MB_CLUSTER_URL!, options);\n\n  const user = Keypair.fromSecretKey(\n    Buffer.from(JSON.parse(fs.readFileSync(userKeypair, 'utf-8'))),\n  );\n  const userWallet = new Wallet(user);\n  const userProvider = new AnchorProvider(connection, userWallet, options);\n\n  const client = await MangoClient.connect(\n    userProvider,\n    'mainnet-beta',\n    MANGO_V4_ID['mainnet-beta'],\n  );\n\n  const admin = Keypair.fromSecretKey(\n    Buffer.from(JSON.parse(fs.readFileSync(MB_PAYER_KEYPAIR!, 'utf-8'))),\n  );\n  console.log(`Admin ${admin.publicKey.toBase58()}`);\n  const group = await client.getGroupForCreator(admin.publicKey, GROUP_NUM);\n  return [client, group, user];\n}\n\nasync function forceCloseUserAccount() {\n  const result = await buildUserClient(MB_PAYER_KEYPAIR!);\n  const client = result[0];\n  const group = result[1];\n  const mangoAccount = await client.getMangoAccount(\n    new PublicKey(MANGO_ACCOUNT_PK!),\n  );\n  await client.closeMangoAccount(group, mangoAccount, true);\n  process.exit();\n}\n\nasync function main() {\n  await forceCloseUserAccount();\n}\n\nmain();\n"]}